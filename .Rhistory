# wins plot
driver_stats = driver_stats %>% arrange(desc(wins))
x = ggplot(data=driver_stats[1:20,],aes(x= reorder(full_name,-wins),y=wins)) +
geom_bar(aes(fill=wins),stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0, 0, 0.2, "cm")) +
scale_y_continuous(breaks = seq(5,100,10)) +
labs(x="",y="",title="Races won: top 20 drivers")
data = driver_stats  %>% arrange(desc(championship)) %>% filter(championship>0)
# title plot
y = ggplot(data=data,aes(x= reorder(full_name,-championship),y=championship)) +
geom_bar(aes(fill=championship),color="black",stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.25, 0, 0, "cm")) +
scale_y_continuous(breaks = pretty(driver_stats$championship, n = 5)) +
labs(x="",y="",title="World titles: drivers standings")
grid.arrange(x,y, ncol=2,widths=c(0.75,1))
# wins plot
driver_stats = driver_stats %>% arrange(desc(wins))
x = ggplot(data=driver_stats[1:20,],aes(x= reorder(full_name,-wins),y=wins)) +
geom_bar(aes(fill=wins),stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0, 0, 0.2, "cm")) +
scale_y_continuous(breaks = seq(5,100,10)) +
labs(x="",y="",title="Races won: top 20 drivers")
data = driver_stats  %>% arrange(desc(championship)) %>% filter(championship>0)
# title plot
y = ggplot(data=data,aes(x= reorder(full_name,-championship),y=championship)) +
geom_bar(aes(fill=championship),color="black",size=1,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.25, 0, 0, "cm")) +
scale_y_continuous(breaks = pretty(driver_stats$championship, n = 5)) +
labs(x="",y="",title="World titles: drivers standings")
grid.arrange(x,y, ncol=2,widths=c(0.75,1))
# wins plot
driver_stats = driver_stats %>% arrange(desc(wins))
x = ggplot(data=driver_stats[1:20,],aes(x= reorder(full_name,-wins),y=wins)) +
geom_bar(aes(fill=wins),stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0, 0, 0.2, "cm")) +
scale_y_continuous(breaks = seq(5,100,10)) +
labs(x="",y="",title="Races won: top 20 drivers")
data = driver_stats  %>% arrange(desc(championship)) %>% filter(championship>0)
# title plot
y = ggplot(data=data,aes(x= reorder(full_name,-championship),y=championship)) +
geom_bar(aes(fill=championship),color="black",size=5,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.25, 0, 0, "cm")) +
scale_y_continuous(breaks = pretty(driver_stats$championship, n = 5)) +
labs(x="",y="",title="World titles: drivers standings")
grid.arrange(x,y, ncol=2,widths=c(0.75,1))
# wins plot
driver_stats = driver_stats %>% arrange(desc(wins))
x = ggplot(data=driver_stats[1:20,],aes(x= reorder(full_name,-wins),y=wins)) +
geom_bar(aes(fill=wins),stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0, 0, 0.2, "cm")) +
scale_y_continuous(breaks = seq(5,100,10)) +
labs(x="",y="",title="Races won: top 20 drivers")
data = driver_stats  %>% arrange(desc(championship)) %>% filter(championship>0)
# title plot
y = ggplot(data=data,aes(x= reorder(full_name,-championship),y=championship)) +
geom_bar(aes(fill=championship),color="black",size=0.1,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.25, 0, 0, "cm")) +
scale_y_continuous(breaks = pretty(driver_stats$championship, n = 5)) +
labs(x="",y="",title="World titles: drivers standings")
grid.arrange(x,y, ncol=2,widths=c(0.75,1))
# wins plot
driver_stats = driver_stats %>% arrange(desc(wins))
x = ggplot(data=driver_stats[1:20,],aes(x= reorder(full_name,-wins),y=wins)) +
geom_bar(aes(fill=wins),stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0, 0, 0.2, "cm")) +
scale_y_continuous(breaks = seq(5,100,10)) +
labs(x="",y="",title="Races won: top 20 drivers")
data = driver_stats  %>% arrange(desc(championship)) %>% filter(championship>0)
# title plot
y = ggplot(data=data,aes(x= reorder(full_name,-championship),y=championship)) +
geom_bar(aes(fill=championship),color="black",size=0.01,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.25, 0, 0, "cm")) +
scale_y_continuous(breaks = pretty(driver_stats$championship, n = 5)) +
labs(x="",y="",title="World titles: drivers standings")
grid.arrange(x,y, ncol=2,widths=c(0.75,1))
# wins plot
driver_stats = driver_stats %>% arrange(desc(wins))
x = ggplot(data=driver_stats[1:20,],aes(x= reorder(full_name,-wins),y=wins)) +
geom_bar(aes(fill=wins),stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0, 0, 0.2, "cm")) +
scale_y_continuous(breaks = seq(5,100,10)) +
labs(x="",y="",title="Races won: top 20 drivers")
data = driver_stats  %>% arrange(desc(championship)) %>% filter(championship>0)
# title plot
y = ggplot(data=data,aes(x= reorder(full_name,-championship),y=championship)) +
geom_bar(aes(fill=championship),color="black",size=1,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.25, 0, 0, "cm")) +
scale_y_continuous(breaks = pretty(driver_stats$championship, n = 5)) +
labs(x="",y="",title="World titles: drivers standings")
grid.arrange(x,y, ncol=2,widths=c(0.75,1))
# wins plot
driver_stats = driver_stats %>% arrange(desc(wins))
x = ggplot(data=driver_stats[1:20,],aes(x= reorder(full_name,-wins),y=wins)) +
geom_bar(aes(fill=wins),stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0, 0, 0.2, "cm")) +
scale_y_continuous(breaks = seq(5,100,10)) +
labs(x="",y="",title="Races won: top 20 drivers")
data = driver_stats  %>% arrange(desc(championship)) %>% filter(championship>0)
# title plot
y = ggplot(data=data,aes(x= reorder(full_name,-championship),y=championship)) +
geom_bar(aes(fill=championship),color="black",size=0.5,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.25, 0, 0, "cm")) +
scale_y_continuous(breaks = pretty(driver_stats$championship, n = 5)) +
labs(x="",y="",title="World titles: drivers standings")
grid.arrange(x,y, ncol=2,widths=c(0.75,1))
# wins plot
driver_stats = driver_stats %>% arrange(desc(wins))
x = ggplot(data=driver_stats[1:20,],aes(x= reorder(full_name,-wins),y=wins)) +
geom_bar(aes(fill=wins),stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0, 0, 0.2, "cm")) +
scale_y_continuous(breaks = seq(5,100,10)) +
labs(x="",y="",title="Races won: top 20 drivers")
data = driver_stats  %>% arrange(desc(championship)) %>% filter(championship>0)
# title plot
y = ggplot(data=data,aes(x= reorder(full_name,-championship),y=championship)) +
geom_bar(aes(fill=championship),color="black",size=0.0005,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.25, 0, 0, "cm")) +
scale_y_continuous(breaks = pretty(driver_stats$championship, n = 5)) +
labs(x="",y="",title="World titles: drivers standings")
grid.arrange(x,y, ncol=2,widths=c(0.75,1))
# wins plot
driver_stats = driver_stats %>% arrange(desc(wins))
x = ggplot(data=driver_stats[1:20,],aes(x= reorder(full_name,-wins),y=wins)) +
geom_bar(aes(fill=wins),color="black",size=0.2,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0, 0, 0.2, "cm")) +
scale_y_continuous(breaks = seq(5,100,10)) +
labs(x="",y="",title="Races won: top 20 drivers")
data = driver_stats  %>% arrange(desc(championship)) %>% filter(championship>0)
# title plot
y = ggplot(data=data,aes(x= reorder(full_name,-championship),y=championship)) +
geom_bar(aes(fill=championship),color="black",size=0.2,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.25, 0, 0, "cm")) +
scale_y_continuous(breaks = pretty(driver_stats$championship, n = 5)) +
labs(x="",y="",title="World titles: drivers standings")
grid.arrange(x,y, ncol=2,widths=c(0.75,1))
# points per win over year plot
ggplot(data=season_rank_system_data[],aes(x= reorder(year,year),y=points_per_win)) +
geom_bar(position = "dodge", aes(fill=points_per_win),stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=90, vjust=0.25, hjust=1,size=8), plot.margin = margin(0.2, 0.75, 0, 0, "cm")) +
labs(x="",y="",title="Points for a win over time")
# points per win over year plot
ggplot(data=season_rank_system_data[],aes(x= reorder(year,year),y=points_per_win)) +
geom_bar(position = "dodge", aes(fill=points_per_win),color="black",size=0.2,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=90, vjust=0.25, hjust=1,size=8), plot.margin = margin(0.2, 0.75, 0, 0, "cm")) +
labs(x="",y="",title="Points for a win over time")
# points per win over year plot
ggplot(data=season_rank_system_data[],aes(x= reorder(year,year),y=points_per_win)) +
geom_bar(position = "dodge", aes(fill=points_per_win),color="black",size=0.2,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=90, vjust=0.25, hjust=1,size=8), plot.margin = margin(0.2, 0.75, 0, 0, "cm")) +
labs(x="",y="",title="Points for a win over time")+
scale_y_continuous(breaks = pretty(driver_stats$championship, n = 5)) +
# points per win over year plot
ggplot(data=season_rank_system_data[],aes(x= reorder(year,year),y=points_per_win)) +
geom_bar(position = "dodge", aes(fill=points_per_win),color="black",size=0.2,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=90, vjust=0.25, hjust=1,size=8), plot.margin = margin(0.2, 0.75, 0, 0, "cm"))+
scale_y_continuous(breaks = pretty(driver_stats$championship, n = 5)) +
labs(x="",y="",title="Points for a win over time")
# points per win over year plot
ggplot(data=season_rank_system_data[],aes(x= reorder(year,year),y=points_per_win)) +
geom_bar(position = "dodge", aes(fill=points_per_win),color="black",size=0.2,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=90, vjust=0.25, hjust=1,size=8), plot.margin = margin(0.2, 0.75, 0, 0, "cm"))+
scale_y_continuous(breaks = c(8,9,10,25)) +
labs(x="",y="",title="Points for a win over time")
# points per win over year plot
ggplot(data=season_rank_system_data[],aes(x= reorder(year,year),y=points_per_win)) +
geom_bar(position = "dodge", aes(fill=points_per_win),color="black",size=0.2,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=90, vjust=0.25, hjust=1,size=8), plot.margin = margin(0.2, 0.75, 0, 0, "cm"))+
scale_y_continuous(breaks = seq(0,25,5)) +
labs(x="",y="",title="Points for a win over time")
# points per win over year plot
ggplot(data=season_rank_system_data[],aes(x= reorder(year,year),y=points_per_win)) +
geom_bar(position = "dodge", aes(fill=points_per_win),color="black",size=0.2,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=90, vjust=0.25, hjust=1,size=8), plot.margin = margin(0.2, 0.75, 0, 0, "cm"))+
scale_y_continuous(breaks = seq(0,25,0.5)) +
labs(x="",y="",title="Points for a win over time")
# points per win over year plot
ggplot(data=season_rank_system_data[],aes(x= reorder(year,year),y=points_per_win)) +
geom_bar(position = "dodge", aes(fill=points_per_win),color="black",size=0.2,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=90, vjust=0.25, hjust=1,size=8), plot.margin = margin(0.2, 0.75, 0, 0, "cm"))+
scale_y_continuous(breaks = seq(0,25,5)) +
labs(x="",y="",title="Points for a win over time")
# points per win over year plot
ggplot(data=season_rank_system_data[],aes(x= reorder(year,year),y=points_per_win)) +
geom_bar(position = "dodge", aes(fill=points_per_win),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=90, vjust=0.25, hjust=1,size=8), plot.margin = margin(0.2, 0.75, 0, 0, "cm"))+
scale_y_continuous(breaks = seq(0,25,5)) +
labs(x="",y="",title="Points for a win over time")
# points per win over year plot
ggplot(data=season_rank_system_data[],aes(x= reorder(year,year),y=points_per_win)) +
geom_bar(position = "dodge", aes(fill=points_per_win),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=90, vjust=0.25, hjust=1,size=8), plot.margin = margin(0.2, 0.75, 0, 0, "cm"))+
scale_y_continuous(breaks = seq(0,25,5)) +
labs(x="",y="",title="Points for a win over time")
# points per win over year plot
ggplot(data=season_rank_system_data[],aes(x= reorder(year,year),y=points_per_win)) +
geom_bar(position = "dodge", aes(fill=points_per_win),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=90, vjust=0.25, hjust=1,size=8), plot.margin = margin(0.2, 0.5, 0, 0, "cm"))+
scale_y_continuous(breaks = seq(0,25,5)) +
labs(x="",y="",title="Points for a win over time")
# points per win over year plot
ggplot(data=season_rank_system_data[],aes(x= reorder(year,year),y=points_per_win)) +
geom_bar(position = "dodge", aes(fill=points_per_win),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=90, vjust=0.25, hjust=1,size=8), plot.margin = margin(0.2, 0.5, 0, -20, "cm"))+
scale_y_continuous(breaks = seq(0,25,5)) +
labs(x="",y="",title="Points for a win over time")
# points per win over year plot
ggplot(data=season_rank_system_data[],aes(x= reorder(year,year),y=points_per_win)) +
geom_bar(position = "dodge", aes(fill=points_per_win),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=90, vjust=0.25, hjust=1,size=8), plot.margin = margin(0.2, 0.5, 0, -0.5, "cm"))+
scale_y_continuous(breaks = seq(0,25,5)) +
labs(x="",y="",title="Points for a win over time")
# points per win over year plot
ggplot(data=season_rank_system_data[],aes(x= reorder(year,year),y=points_per_win)) +
geom_bar(position = "dodge", aes(fill=points_per_win),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=90, vjust=0.25, hjust=1,size=8), plot.margin = margin(0.2, 0.5, 0, -0.25, "cm"))+
scale_y_continuous(breaks = seq(0,25,5)) +
labs(x="",y="",title="Points for a win over time")
# points per win over year plot
ggplot(data=season_rank_system_data[],aes(x= reorder(year,year),y=points_per_win)) +
geom_bar(position = "dodge", aes(fill=points_per_win),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=90, vjust=0.25, hjust=1,size=8), plot.margin = margin(0.2, 0.45, 0, -0.2, "cm"))+
scale_y_continuous(breaks = seq(0,25,5)) +
labs(x="",y="",title="Points for a win over time")
# points per win over year plot
ggplot(data=season_rank_system_data[],aes(x= reorder(year,year),y=points_per_win)) +
geom_bar(position = "dodge", aes(fill=points_per_win),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=90, vjust=0.25, hjust=1,size=8), plot.margin = margin(0.2, 0.45, 0, -0.2, "cm"))+
scale_y_continuous(breaks = seq(0,25,5)) +
labs(x="",y="",title="Points for a win over time")
# points per win over year plot
ggplot(data=season_rank_system_data[],aes(x= reorder(year,year),y=points_per_win)) +
geom_bar(position = "dodge", aes(fill=points_per_win),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=90, vjust=0.25, hjust=1,size=8), plot.margin = margin(0.2, 0.4, 0, -0.2, "cm"))+
scale_y_continuous(breaks = seq(0,25,5)) +
labs(x="",y="",title="Points for a win over time")
# points per win over year plot
ggplot(data=season_rank_system_data[],aes(x= reorder(year,year),y=points_per_win)) +
geom_bar(position = "dodge", aes(fill=points_per_win),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=90, vjust=0.25, hjust=1,size=8), plot.margin = margin(0.2, 0.5, 0, -0.2, "cm"))+
scale_y_continuous(breaks = seq(0,25,5)) +
labs(x="",y="",title="Points for a win over time")
# points per win over year plot
ggplot(data=season_rank_system_data[],aes(x= reorder(year,year),y=points_per_win)) +
geom_bar(position = "dodge", aes(fill=points_per_win),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=90, vjust=0.25, hjust=1,size=8), plot.margin = margin(0.2, 0.5, 0, -0.15, "cm"))+
scale_y_continuous(breaks = seq(0,25,5)) +
labs(x="",y="",title="Points for a win over time")
# points per win over year plot
ggplot(data=season_rank_system_data[],aes(x= reorder(year,year),y=points_per_win)) +
geom_bar(position = "dodge", aes(fill=points_per_win),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=90, vjust=0.25, hjust=1,size=8), plot.margin = margin(0.2, 0.5, 0, -0.1, "cm"))+
scale_y_continuous(breaks = seq(0,25,5)) +
labs(x="",y="",title="Points for a win over time")
# plot punti pre vs punti normalized
driver_stats = driver_stats %>% arrange(desc(tot_points))
x = ggplot(data=driver_stats[1:20,],aes(x= reorder(full_name,-tot_points),y=tot_points)) +
geom_bar(aes(fill=tot_points),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0, 0, 0, "cm")) +
scale_y_continuous(breaks = pretty(driver_stats$tot_points, n = 10)) +
labs(x="",y="",title="Total points: top 20 drivers")
driver_stats = driver_stats %>% arrange(desc(tot_points_new))
y =ggplot(data=driver_stats[1:20,],aes(x= reorder(full_name,-tot_points_new),y=tot_points_new)) +
geom_bar(aes(fill=tot_points_new),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.25, 0, 0, "cm")) +
scale_y_continuous(breaks = pretty(driver_stats$tot_points_new, n = 10)) +
labs(x="",y="",title="Total points (with normalized data): top 20 drivers")
grid.arrange(x,y, ncol=2,widths=c(1,1))
# plot punti pre vs punti normalized
driver_stats = driver_stats %>% arrange(desc(tot_points))
x = ggplot(data=driver_stats[1:20,],aes(x= reorder(full_name,-tot_points),y=tot_points)) +
geom_bar(aes(fill=tot_points),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0, 0, 0, "cm")) +
scale_y_continuous(breaks = seq(0,4000,500)) +
labs(x="",y="",title="Total points: top 20 drivers")
driver_stats = driver_stats %>% arrange(desc(tot_points_new))
y =ggplot(data=driver_stats[1:20,],aes(x= reorder(full_name,-tot_points_new),y=tot_points_new)) +
geom_bar(aes(fill=tot_points_new),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.25, 0, 0, "cm")) +
scale_y_continuous(breaks = seq(0,4000,500)) +
labs(x="",y="",title="Total points (with normalized data): top 20 drivers")
grid.arrange(x,y, ncol=2,widths=c(1,1))
# plot punti pre vs punti normalized
driver_stats = driver_stats %>% arrange(desc(tot_points))
x = ggplot(data=driver_stats[1:20,],aes(x= reorder(full_name,-tot_points),y=tot_points)) +
geom_bar(aes(fill=tot_points),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0, 0, 0, "cm")) +
scale_y_continuous(breaks = seq(0,4000,400)) +
labs(x="",y="",title="Total points: top 20 drivers")
driver_stats = driver_stats %>% arrange(desc(tot_points_new))
y =ggplot(data=driver_stats[1:20,],aes(x= reorder(full_name,-tot_points_new),y=tot_points_new)) +
geom_bar(aes(fill=tot_points_new),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.25, 0, 0, "cm")) +
scale_y_continuous(breaks = seq(0,4000,500)) +
labs(x="",y="",title="Total points (with normalized data): top 20 drivers")
grid.arrange(x,y, ncol=2,widths=c(1,1))
# plot punti pre vs punti normalized
driver_stats = driver_stats %>% arrange(desc(tot_points))
x = ggplot(data=driver_stats[1:20,],aes(x= reorder(full_name,-tot_points),y=tot_points)) +
geom_bar(aes(fill=tot_points),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0, 0, 0, "cm")) +
scale_y_continuous(breaks = seq(0,4000,250)) +
labs(x="",y="",title="Total points: top 20 drivers")
driver_stats = driver_stats %>% arrange(desc(tot_points_new))
y =ggplot(data=driver_stats[1:20,],aes(x= reorder(full_name,-tot_points_new),y=tot_points_new)) +
geom_bar(aes(fill=tot_points_new),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.25, 0, 0, "cm")) +
scale_y_continuous(breaks = seq(0,4000,500)) +
labs(x="",y="",title="Total points (with normalized data): top 20 drivers")
grid.arrange(x,y, ncol=2,widths=c(1,1))
# plot punti pre vs punti normalized
driver_stats = driver_stats %>% arrange(desc(tot_points))
x = ggplot(data=driver_stats[1:20,],aes(x= reorder(full_name,-tot_points),y=tot_points)) +
geom_bar(aes(fill=tot_points),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0, 0, 0, "cm")) +
scale_y_continuous(breaks = seq(0,4000,250)) +
labs(x="",y="",title="Total points: top 20 drivers")
driver_stats = driver_stats %>% arrange(desc(tot_points_new))
y =ggplot(data=driver_stats[1:20,],aes(x= reorder(full_name,-tot_points_new),y=tot_points_new)) +
geom_bar(aes(fill=tot_points_new),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.25, 0, 0, "cm")) +
scale_y_continuous(breaks = seq(0,4000,250)) +
labs(x="",y="",title="Total points (with normalized data): top 20 drivers")
grid.arrange(x,y, ncol=2,widths=c(1,1))
# plot punti pre vs punti normalized
driver_stats = driver_stats %>% arrange(desc(tot_points))
x = ggplot(data=driver_stats[1:20,],aes(x= reorder(full_name,-tot_points),y=tot_points)) +
geom_bar(aes(fill=tot_points),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0, 0, 0, "cm")) +
scale_y_continuous(breaks = seq(0,4000,250)) +
labs(x="",y="",title="Total points: top 20 drivers")
driver_stats = driver_stats %>% arrange(desc(tot_points_new))
y =ggplot(data=driver_stats[1:20,],aes(x= reorder(full_name,-tot_points_new),y=tot_points_new)) +
geom_bar(aes(fill=tot_points_new),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.25, 0, 0, "cm")) +
scale_y_continuous(breaks = seq(0,4250,250)) +
labs(x="",y="",title="Total points (with normalized data): top 20 drivers")
grid.arrange(x,y, ncol=2,widths=c(1,1))
# plot podiums and poles
driver_stats = driver_stats %>% arrange(desc(podiums))
x = ggplot(data=driver_stats[1:20,],aes(x= reorder(full_name,-podiums),y=podiums)) +
geom_bar(aes(fill=podiums),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0, 0, 0, "cm")) +
scale_y_continuous(breaks = pretty(driver_stats$podiums, n = 10)) +
labs(x="",y="",title="Total podiums: top 20 drivers")
driver_stats = driver_stats %>% arrange(desc(pole_positions))
y =ggplot(data=driver_stats[1:20,],aes(x= reorder(full_name,-pole_positions),y=pole_positions)) +
geom_bar(aes(fill=pole_positions),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.25, 0, 0, "cm")) +
scale_y_continuous(breaks = pretty(driver_stats$pole_positions, n = 10)) +
labs(x="",y="",title="Total pole positions: top 20 drivers")
grid.arrange(x,y, ncol=2,widths=c(1,1))
# plot of ratios/rates
data = driver_stats %>% filter(races > 20)
data = data %>% arrange(desc(win_rate))
x = ggplot(data=data[0:15,],aes(x= reorder(full_name,-win_rate),y=win_rate)) +
geom_bar(aes(fill=win_rate),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0, 0, 0, "cm")) +
scale_y_continuous(breaks = pretty(driver_stats$win_rate, n = 5)) +
labs(x="",y="",title="Win rate")
driver_stats = driver_stats %>% arrange(desc(podium_rate))
y =ggplot(data=data[0:15,],aes(x= reorder(full_name,-podium_rate),y=podium_rate)) +
geom_bar(aes(fill=podium_rate),color="black",size=0.35,color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.25, 0, 0, "cm")) +
scale_y_continuous(breaks = pretty(driver_stats$podium_rate, n = 5)) +
labs(x="",y="",title="Podium rate")
driver_stats = driver_stats %>% arrange(desc(points_ratio))
z =ggplot(data=data[0:15,],aes(x= reorder(full_name,-points_ratio),y=points_ratio)) +
geom_bar(aes(fill=points_ratio),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.25, 0, 0, "cm")) +
scale_y_continuous(breaks = pretty(driver_stats$points_ratio, n = 5)) +
labs(x="",y="",title="Points rate")
driver_stats = driver_stats %>% arrange(desc(pole_ratio))
w=ggplot(data=data[0:15,],aes(x= reorder(full_name,-pole_ratio),y=pole_ratio)) +
geom_bar(aes(fill=pole_ratio),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.25, 0, 0, "cm")) +
scale_y_continuous(breaks = pretty(driver_stats$pole_ratio, n = 5)) +
labs(x="",y="",title="Pole positions rate")
grid.arrange(x,y,z,w, ncol=2,nrow=2,widths=c(1,1))
# top 20 driver of all time
data = driver_stats  %>% arrange(desc(performance)) %>% filter(races>20)
ggplot(data=data[0:20,],aes(x= reorder(full_name,performance),y=performance)) +
geom_bar(aes(fill=performance),stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=0, vjust=1, hjust=1),axis.text.y = element_text(size=10.5)) +
labs(x="",y="",title="Most dominant F1 drivers of all time") +
scale_x_continuous(breaks = seq(0,1,0.1)) +
coord_flip()
# top 20 driver of all time
data = driver_stats  %>% arrange(desc(performance)) %>% filter(races>20)
ggplot(data=data[0:20,],aes(x= reorder(full_name,performance),y=performance)) +
geom_bar(aes(fill=performance),stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=0, vjust=1, hjust=1),axis.text.y = element_text(size=10.5)) +
labs(x="",y="",title="Most dominant F1 drivers of all time") +
scale_x_discrete(breaks = seq(0,1,0.1)) +
coord_flip()
# top 20 driver of all time
data = driver_stats  %>% arrange(desc(performance)) %>% filter(races>20)
ggplot(data=data[0:20,],aes(x= reorder(full_name,performance),y=performance)) +
geom_bar(aes(fill=performance),stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=0, vjust=1, hjust=1),axis.text.y = element_text(size=10.5)) +
labs(x="",y="",title="Most dominant F1 drivers of all time")
coord_flip()
# top 20 driver of all time
data = driver_stats  %>% arrange(desc(performance)) %>% filter(races>20)
ggplot(data=data[0:20,],aes(x= reorder(full_name,performance),y=performance)) +
geom_bar(aes(fill=performance),stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=0, vjust=1, hjust=1),axis.text.y = element_text(size=10.5)) +
labs(x="",y="",title="Most dominant F1 drivers of all time")
coord_flip()
# top 20 driver of all time
data = driver_stats  %>% arrange(desc(performance)) %>% filter(races>20)
ggplot(data=data[0:20,],aes(x= reorder(full_name,performance),y=performance)) +
geom_bar(aes(fill=performance),stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=0, vjust=1, hjust=1),axis.text.y = element_text(size=10.5)) +
labs(x="",y="",title="Most dominant F1 drivers of all time")+
coord_flip()
# top 20 driver of all time
data = driver_stats  %>% arrange(desc(performance)) %>% filter(races>20)
ggplot(data=data[0:20,],aes(x= reorder(full_name,performance),y=performance)) +
geom_bar(aes(fill=performance),stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=0, vjust=1, hjust=1),axis.text.y = element_text(size=10.5)) +
labs(x="",y="",title="Most dominant F1 drivers of all time")+
scale_x_continuous(breaks =  pretty(history_data_filtered$year, n = 10)) +
coord_flip()
# top 20 driver of all time
data = driver_stats  %>% arrange(desc(performance)) %>% filter(races>20)
ggplot(data=data[0:20,],aes(x= reorder(full_name,performance),y=performance)) +
geom_bar(aes(fill=performance),stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=0, vjust=1, hjust=1),axis.text.y = element_text(size=10.5)) +
labs(x="",y="",title="Most dominant F1 drivers of all time")+
scale_y_continuous(breaks =  pretty(history_data_filtered$year, n = 10)) +
coord_flip()
# top 20 driver of all time
data = driver_stats  %>% arrange(desc(performance)) %>% filter(races>20)
ggplot(data=data[0:20,],aes(x= reorder(full_name,performance),y=performance)) +
geom_bar(aes(fill=performance),stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=0, vjust=1, hjust=1),axis.text.y = element_text(size=10.5)) +
labs(x="",y="",title="Most dominant F1 drivers of all time")+
scale_y_continuous(breaks =  seq(0,1,0.1)) +
coord_flip()
# top 20 driver of all time
data = driver_stats  %>% arrange(desc(performance)) %>% filter(races>20)
ggplot(data=data[0:20,],aes(x= reorder(full_name,performance),y=performance)) +
geom_bar(aes(fill=performance),stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=0, vjust=1, hjust=1),axis.text.y = element_text(size=10.5)) +
labs(x="",y="",title="Most dominant F1 drivers of all time")+
scale_y_continuous(breaks =  seq(0,1,0.05)) +
coord_flip()
# top 20 driver of all time
data = driver_stats  %>% arrange(desc(performance)) %>% filter(races>20)
ggplot(data=data[0:20,],aes(x= reorder(full_name,performance),y=performance)) +
geom_bar(aes(fill=performance),stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=0, vjust=1, hjust=1),axis.text.y = element_text(size=10.5)) +
labs(x="",y="",title="Most dominant F1 drivers of all time")+
scale_y_continuous(breaks =  seq(0,1,0.1)) +
coord_flip()
# top 20 driver of all time
data = driver_stats  %>% arrange(desc(performance)) %>% filter(races>20)
ggplot(data=data[0:20,],aes(x= reorder(full_name,performance),y=performance)) +
geom_bar(aes(fill=performance),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=0, vjust=1, hjust=1),axis.text.y = element_text(size=10.5)) +
labs(x="",y="",title="Most dominant F1 drivers of all time")+
scale_y_continuous(breaks =  seq(0,1,0.1)) +
coord_flip()
ggplot(data=retire_per_year_stats[],aes(x= reorder(year,year),y=1-retire_ratio)) +
geom_bar(position = "dodge", aes(fill=retire_ratio),stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=90, vjust=0.25, hjust=1,size=8), plot.margin = margin(0.2, 0.75, 0, 0, "cm")) +
scale_y_continuous(breaks = seq(0,1,0.1))+
labs(x="",y="",title="Probability to finish a race without having a mechanical failure over time")
ggplot(data=retire_per_year_stats[],aes(x= reorder(year,year),y=1-retire_ratio)) +
geom_bar(position = "dodge", aes(fill=retire_ratio),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=90, vjust=0.25, hjust=1,size=8), plot.margin = margin(0.2, 0.5, 0, -0.1, "cm"))+
scale_y_continuous(breaks = seq(0,1,0.1))+
labs(x="",y="",title="Probability to finish a race without having a mechanical failure over time")
data = driver_stats  %>% arrange(desc(performance_with_bonus)) %>% filter(races>20) %>% select(-driverId,-car_reliability_bonus_percentage,-tot_points_potential)
data = data %>% select(full_name,country,championship,races,completed_races,tot_retire,wins,win_rate,second,third,podiums,podium_rate,tot_points,tot_points_new,points_ratio,pole_positions,pole_ratio,second_in_grid,performance,performance_with_bonus)
data = data %>% mutate(pole_ratio = round(pole_ratio,4)) %>% mutate(podium_rate = round(podium_rate,4)) %>% mutate(performance = round(performance,4)) %>% mutate(performance_with_bonus = round(performance_with_bonus,4))%>% mutate(win_rate = round(win_rate,4))%>% mutate(points_ratio = round(points_ratio,4))
colnames(data)=c("Driver","Nationality","World titles","Races started","Races completed","Retirements","Wins","Win rate","2nd","3rd","Podiums","Podium rate","Points scored","Points scored (normalized data)","Points rate","Pole positions","Pole rate","2nd in grid","Performance","Performance with mec. fail bonus")
reactable(data,searchable = TRUE,bordered = TRUE,height = 500)
data = driver_stats  %>% arrange(desc(performance_with_bonus)) %>% filter(races>20) %>% select(-driverId,-car_reliability_bonus_percentage,-tot_points_potential)
data = data %>% select(full_name,country,championship,races,completed_races,tot_retire,wins,win_rate,second,third,podiums,podium_rate,tot_points,tot_points_new,points_ratio,pole_positions,pole_ratio,second_in_grid,performance,performance_with_bonus)
data = data %>% mutate(pole_ratio = round(pole_ratio,4)) %>% mutate(podium_rate = round(podium_rate,4)) %>% mutate(performance = round(performance,4)) %>% mutate(performance_with_bonus = round(performance_with_bonus,4))%>% mutate(win_rate = round(win_rate,4))%>% mutate(points_ratio = round(points_ratio,4))
colnames(data)=c("Driver","Nationality","World titles","Races started","Races completed","Retirements","Wins","Win rate","2nd","3rd","Podiums","Podium rate","Points scored","Points scored (normalized data)","Points rate","Pole positions","Pole rate","2nd in grid","Performance","Performance with mec. fail bonus")
reactable(data,searchable = TRUE,bordered = TRUE,height = 500)
# top 20 driver of all time with car reliability BONUS
data = driver_stats  %>% arrange(desc(performance_with_bonus)) %>% filter(races>20)
ggplot(data=data[0:20,],aes(x= reorder(full_name,performance_with_bonus),y=performance_with_bonus)) +
geom_bar(aes(fill=performance_with_bonus),stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=0, vjust=1, hjust=1),axis.text.y = element_text(size=10.5)) +
labs(x="",y="",title="Most dominant F1 drivers of all time with mechanical failures bonus") +
coord_flip()
country_stats = country_stats %>% arrange(desc(held_races_by_drivers))
x = ggplot(data=country_stats[1:8,],aes(x= reorder(country,-held_races_by_drivers),y=held_races_by_drivers)) +
geom_bar(aes(fill=held_races_by_drivers),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.25, 0, 0, "cm"),plot.title = element_text(size = 10,face="bold")) +
scale_y_continuous(breaks = pretty(country_stats$held_races_by_drivers, n = 5)) +
labs(x="",y="",title="Held races by drivers")+
scale_fill_distiller(palette="YlOrRd",direction = 1)
country_stats = country_stats %>% arrange(desc(held_seasons_by_constr))
y = ggplot(data=country_stats[1:8,],aes(x= reorder(country,-held_seasons_by_constr),y=held_seasons_by_constr)) +
geom_bar(aes(fill=held_seasons_by_constr),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.25, 0, 0, "cm"),plot.title = element_text(size = 10,face="bold")) +
scale_y_continuous(breaks = pretty(country_stats$held_seasons_by_constr, n = 5)) +
labs(x="",y="",title="Held seasons by constructors")+
scale_fill_distiller(palette="YlOrRd",direction = 1)
country_stats = country_stats %>% arrange(desc(held_races))
z = ggplot(data=country_stats[1:8,],aes(x= reorder(country,-held_races),y=held_races)) +
geom_bar(aes(fill=held_races),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.25, 0, 0, "cm"),plot.title = element_text(size = 10,face="bold")) +
scale_y_continuous(breaks = pretty(country_stats$held_races, n = 5)) +
labs(x="",y="",title="Held race weekends")+
scale_fill_distiller(palette="YlOrRd",direction = 1)
grid.arrange(x,y,z, ncol=3,widths=c(1,1,1))
