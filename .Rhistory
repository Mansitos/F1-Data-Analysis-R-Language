# correggo UK e USA in united kingdom e united states
country_stats_copy = country_stats %>% mutate(country=replace(country,country=="UK","United Kingdom")) %>% mutate(country=replace(country,country=="USA","United States of America"))
world = world %>% rename(country=sovereignt)
world = full_join(world,country_stats_copy, by="country")
ggplot(data = world) +
geom_sf(aes(fill = score)) +
scale_fill_viridis_c(option = "plasma", trans = "sqrt") +
coord_sf(xlim = c(-170, 170), ylim = c(-60, 80), expand = FALSE)
ggplot(data = world) +
geom_sf(aes(fill = score)) +
scale_fill_viridis_c(option = "plasma", trans = "sqrt") +
coord_sf(xlim = c(-50, 150), ylim = c(30, 70), expand = FALSE)
library("rnaturalearth")
library("rnaturalearthdata")
world <- ne_countries(scale = "medium", returnclass = "sf")
class(world)
# correggo UK e USA in united kingdom e united states
country_stats_copy = country_stats %>% mutate(country=replace(country,country=="UK","United Kingdom")) %>% mutate(country=replace(country,country=="USA","United States of America"))
world = world %>% rename(country=sovereignt)
world = full_join(world,country_stats_copy, by="country")
ggplot(data = world) +
geom_sf(aes(fill = score)) +
scale_fill_viridis_c(option = "plasma", trans = "sqrt") +
coord_sf(xlim = c(-170, 170), ylim = c(-60, 80), expand = FALSE)
ggplot(data = world) +
geom_sf(aes(fill = score)) +
scale_fill_viridis_c(option = "plasma", trans = "sqrt") +
coord_sf(xlim = c(-75, 125), ylim = c(30, 70), expand = FALSE)
library("rnaturalearth")
library("rnaturalearthdata")
world <- ne_countries(scale = "medium", returnclass = "sf")
class(world)
# correggo UK e USA in united kingdom e united states
country_stats_copy = country_stats %>% mutate(country=replace(country,country=="UK","United Kingdom")) %>% mutate(country=replace(country,country=="USA","United States of America"))
world = world %>% rename(country=sovereignt)
world = full_join(world,country_stats_copy, by="country")
ggplot(data = world) +
geom_sf(aes(fill = score)) +
scale_fill_viridis_c(option = "plasma", trans = "sqrt") +
coord_sf(xlim = c(-170, 170), ylim = c(-60, 80), expand = FALSE)
ggplot(data = world) +
geom_sf(aes(fill = score)) +
scale_fill_viridis_c(option = "plasma", trans = "sqrt") +
coord_sf(xlim = c(0, 125), ylim = c(30, 70), expand = FALSE)
library("rnaturalearth")
library("rnaturalearthdata")
world <- ne_countries(scale = "medium", returnclass = "sf")
class(world)
# correggo UK e USA in united kingdom e united states
country_stats_copy = country_stats %>% mutate(country=replace(country,country=="UK","United Kingdom")) %>% mutate(country=replace(country,country=="USA","United States of America"))
world = world %>% rename(country=sovereignt)
world = full_join(world,country_stats_copy, by="country")
ggplot(data = world) +
geom_sf(aes(fill = score)) +
scale_fill_viridis_c(option = "plasma", trans = "sqrt") +
coord_sf(xlim = c(-170, 170), ylim = c(-60, 80), expand = FALSE)
ggplot(data = world) +
geom_sf(aes(fill = score)) +
scale_fill_viridis_c(option = "plasma", trans = "sqrt") +
coord_sf(xlim = c(-50, 125), ylim = c(30, 70), expand = FALSE)
library("rnaturalearth")
library("rnaturalearthdata")
world <- ne_countries(scale = "medium", returnclass = "sf")
class(world)
# correggo UK e USA in united kingdom e united states
country_stats_copy = country_stats %>% mutate(country=replace(country,country=="UK","United Kingdom")) %>% mutate(country=replace(country,country=="USA","United States of America"))
world = world %>% rename(country=sovereignt)
world = full_join(world,country_stats_copy, by="country")
ggplot(data = world) +
geom_sf(aes(fill = score)) +
scale_fill_viridis_c(option = "plasma", trans = "sqrt") +
coord_sf(xlim = c(-170, 170), ylim = c(-60, 80), expand = FALSE)
ggplot(data = world) +
geom_sf(aes(fill = score)) +
scale_fill_viridis_c(option = "plasma", trans = "sqrt") +
coord_sf(xlim = c(-20, 75), ylim = c(30, 70), expand = FALSE)
library("rnaturalearth")
library("rnaturalearthdata")
world <- ne_countries(scale = "medium", returnclass = "sf")
class(world)
# correggo UK e USA in united kingdom e united states
country_stats_copy = country_stats %>% mutate(country=replace(country,country=="UK","United Kingdom")) %>% mutate(country=replace(country,country=="USA","United States of America"))
world = world %>% rename(country=sovereignt)
world = full_join(world,country_stats_copy, by="country")
ggplot(data = world) +
geom_sf(aes(fill = score)) +
scale_fill_viridis_c(option = "plasma", trans = "sqrt") +
coord_sf(xlim = c(-170, 170), ylim = c(-60, 80), expand = FALSE)
ggplot(data = world) +
geom_sf(aes(fill = score)) +
scale_fill_viridis_c(option = "plasma", trans = "sqrt") +
coord_sf(xlim = c(-20, 50), ylim = c(30, 70), expand = FALSE)
library("rnaturalearth")
library("rnaturalearthdata")
world <- ne_countries(scale = "medium", returnclass = "sf")
class(world)
# correggo UK e USA in united kingdom e united states
country_stats_copy = country_stats %>% mutate(country=replace(country,country=="UK","United Kingdom")) %>% mutate(country=replace(country,country=="USA","United States of America"))
world = world %>% rename(country=sovereignt)
world = full_join(world,country_stats_copy, by="country")
ggplot(data = world) +
geom_sf(aes(fill = score)) +
scale_fill_viridis_c(option = "plasma", trans = "sqrt") +
coord_sf(xlim = c(-170, 170), ylim = c(-60, 80), expand = FALSE)
ggplot(data = world) +
geom_sf(aes(fill = score)) +
scale_color_gradient2(midpoint = mid, low = "blue", mid = "white",
high = "red", space = "Lab" ) +
coord_sf(xlim = c(-20, 50), ylim = c(30, 70), expand = FALSE)
library("rnaturalearth")
library("rnaturalearthdata")
world <- ne_countries(scale = "medium", returnclass = "sf")
class(world)
# correggo UK e USA in united kingdom e united states
country_stats_copy = country_stats %>% mutate(country=replace(country,country=="UK","United Kingdom")) %>% mutate(country=replace(country,country=="USA","United States of America"))
world = world %>% rename(country=sovereignt)
world = full_join(world,country_stats_copy, by="country")
ggplot(data = world) +
geom_sf(aes(fill = score)) +
scale_fill_viridis_c(option = "plasma", trans = "sqrt") +
coord_sf(xlim = c(-170, 170), ylim = c(-60, 80), expand = FALSE)
ggplot(data = world) +
geom_sf(aes(fill = score)) +
scale_color_gradient2() +
coord_sf(xlim = c(-20, 50), ylim = c(30, 70), expand = FALSE)
library("rnaturalearth")
library("rnaturalearthdata")
world <- ne_countries(scale = "medium", returnclass = "sf")
class(world)
# correggo UK e USA in united kingdom e united states
country_stats_copy = country_stats %>% mutate(country=replace(country,country=="UK","United Kingdom")) %>% mutate(country=replace(country,country=="USA","United States of America"))
world = world %>% rename(country=sovereignt)
world = full_join(world,country_stats_copy, by="country")
ggplot(data = world) +
geom_sf(aes(fill = score)) +
scale_color_gradient2() +
coord_sf(xlim = c(-170, 170), ylim = c(-60, 80), expand = FALSE)
ggplot(data = world) +
geom_sf(aes(fill = score)) +
scale_color_gradient2() +
coord_sf(xlim = c(-20, 50), ylim = c(30, 70), expand = FALSE)
library("rnaturalearth")
library("rnaturalearthdata")
world <- ne_countries(scale = "medium", returnclass = "sf")
class(world)
# correggo UK e USA in united kingdom e united states
country_stats_copy = country_stats %>% mutate(country=replace(country,country=="UK","United Kingdom")) %>% mutate(country=replace(country,country=="USA","United States of America"))
world = world %>% rename(country=sovereignt)
world = full_join(world,country_stats_copy, by="country")
ggplot(data = world) +
geom_sf(aes(fill = score)) +
scale_color_gradient1() +
coord_sf(xlim = c(-170, 170), ylim = c(-60, 80), expand = FALSE)
library("rnaturalearth")
library("rnaturalearthdata")
world <- ne_countries(scale = "medium", returnclass = "sf")
class(world)
# correggo UK e USA in united kingdom e united states
country_stats_copy = country_stats %>% mutate(country=replace(country,country=="UK","United Kingdom")) %>% mutate(country=replace(country,country=="USA","United States of America"))
world = world %>% rename(country=sovereignt)
world = full_join(world,country_stats_copy, by="country")
ggplot(data = world) +
geom_sf(aes(fill = score)) +
scale_color_gradient2() +
coord_sf(xlim = c(-170, 170), ylim = c(-60, 80), expand = FALSE)
ggplot(data = world) +
geom_sf(aes(fill = score)) +
scale_color_gradient2() +
coord_sf(xlim = c(-20, 50), ylim = c(30, 70), expand = FALSE)
?scale_color_gradient2
library("rnaturalearth")
library("rnaturalearthdata")
world <- ne_countries(scale = "medium", returnclass = "sf")
class(world)
# correggo UK e USA in united kingdom e united states
country_stats_copy = country_stats %>% mutate(country=replace(country,country=="UK","United Kingdom")) %>% mutate(country=replace(country,country=="USA","United States of America"))
world = world %>% rename(country=sovereignt)
world = full_join(world,country_stats_copy, by="country")
ggplot(data = world) +
geom_sf(aes(fill = score)) +
scale_color_gradient() +
coord_sf(xlim = c(-170, 170), ylim = c(-60, 80), expand = FALSE)
ggplot(data = world) +
geom_sf(aes(fill = score)) +
scale_color_gradient2() +
coord_sf(xlim = c(-20, 50), ylim = c(30, 70), expand = FALSE)
library("rnaturalearth")
library("rnaturalearthdata")
world <- ne_countries(scale = "medium", returnclass = "sf")
class(world)
# correggo UK e USA in united kingdom e united states
country_stats_copy = country_stats %>% mutate(country=replace(country,country=="UK","United Kingdom")) %>% mutate(country=replace(country,country=="USA","United States of America"))
world = world %>% rename(country=sovereignt)
world = full_join(world,country_stats_copy, by="country")
ggplot(data = world) +
geom_sf(aes(fill = score)) +
scale_color_gradientn() +
coord_sf(xlim = c(-170, 170), ylim = c(-60, 80), expand = FALSE)
library("rnaturalearth")
library("rnaturalearthdata")
world <- ne_countries(scale = "medium", returnclass = "sf")
class(world)
# correggo UK e USA in united kingdom e united states
country_stats_copy = country_stats %>% mutate(country=replace(country,country=="UK","United Kingdom")) %>% mutate(country=replace(country,country=="USA","United States of America"))
world = world %>% rename(country=sovereignt)
world = full_join(world,country_stats_copy, by="country")
ggplot(data = world) +
geom_sf(aes(fill = score)) +
scale_color_gradient2() +
coord_sf(xlim = c(-170, 170), ylim = c(-60, 80), expand = FALSE)
ggplot(data = world) +
geom_sf(aes(fill = score)) +
scale_color_gradient2() +
coord_sf(xlim = c(-20, 50), ylim = c(30, 70), expand = FALSE)
country_stats
library("rnaturalearth")
library("rnaturalearthdata")
world <- ne_countries(scale = "medium", returnclass = "sf")
class(world)
# correggo UK e USA in united kingdom e united states
country_stats_copy = country_stats %>% mutate(country=replace(country,country=="UK","United Kingdom")) %>% mutate(country=replace(country,country=="USA","United States of America"))
world = world %>% rename(country=sovereignt)
world = full_join(world,country_stats_copy, by="country")
ggplot(data = world) +
geom_sf(aes(fill = score)) +
scale_color_gradient2() +
coord_sf(xlim = c(-170, 170), ylim = c(-60, 80), expand = FALSE)
ggplot(data = world) +
geom_sf(aes(fill = drivers)) +
scale_color_gradient2() +
coord_sf(xlim = c(-20, 50), ylim = c(30, 70), expand = FALSE)
library("rnaturalearth")
library("rnaturalearthdata")
world <- ne_countries(scale = "medium", returnclass = "sf")
class(world)
# correggo UK e USA in united kingdom e united states
country_stats_copy = country_stats %>% mutate(country=replace(country,country=="UK","United Kingdom")) %>% mutate(country=replace(country,country=="USA","United States of America"))
world = world %>% rename(country=sovereignt)
world = full_join(world,country_stats_copy, by="country")
ggplot(data = world) +
geom_sf(aes(fill = score)) +
scale_color_gradient2() +
coord_sf(xlim = c(-170, 170), ylim = c(-60, 80), expand = FALSE)
ggplot(data = world) +
geom_sf(aes(fill = score)) +
scale_color_gradient2() +
coord_sf(xlim = c(-20, 50), ylim = c(30, 70), expand = FALSE)
View(races)
# Calcolo KM totali percorsi in F1
# Mi baso sul n° di km da percorrere per ciascun gran premio (in base ai vari regolamenti dei vari anni) (dati trovati su internet)
# il n° è una stima dei km percorsi da ogni pilota (che ha completato la gara) in ogni grand prix di quella stagione, qualora il regolamento prevedesse dei range (vedi 300-500) si è usato il valore medio (400)
grand_prix_km_v1 <- as_tibble(read_csv("data\\grand_prix_km_v1"))
# Calcolo KM totali percorsi in F1
# Mi baso sul n° di km da percorrere per ciascun gran premio (in base ai vari regolamenti dei vari anni) (dati trovati su internet)
# il n° è una stima dei km percorsi da ogni pilota (che ha completato la gara) in ogni grand prix di quella stagione, qualora il regolamento prevedesse dei range (vedi 300-500) si è usato il valore medio (400)
grand_prix_km_v1 <- as_tibble(read_csv("data\\grand_prix_km_v1.cvs"))
# Calcolo KM totali percorsi in F1
# Mi baso sul n° di km da percorrere per ciascun gran premio (in base ai vari regolamenti dei vari anni) (dati trovati su internet)
# il n° è una stima dei km percorsi da ogni pilota (che ha completato la gara) in ogni grand prix di quella stagione, qualora il regolamento prevedesse dei range (vedi 300-500) si è usato il valore medio (400)
grand_prix_km_v1 <- as_tibble(read_csv("data\\grand_prix_km_v1.csv"))
# Calcolo KM totali percorsi in F1
# Mi baso sul n° di km da percorrere per ciascun gran premio (in base ai vari regolamenti dei vari anni) (dati trovati su internet)
# il n° è una stima dei km percorsi da ogni pilota (che ha completato la gara) in ogni grand prix di quella stagione, qualora il regolamento prevedesse dei range (vedi 300-500) si è usato il valore medio (400)
grand_prix_km_v1 <- as_tibble(read_csv("data\\grand_prix_km_v1.csv"))
# Calcolo KM totali percorsi in F1
# Mi baso sul n° di km da percorrere per ciascun gran premio (in base ai vari regolamenti dei vari anni) (dati trovati su internet)
# il n° è una stima dei km percorsi da ogni pilota (che ha completato la gara) in ogni grand prix di quella stagione, qualora il regolamento prevedesse dei range (vedi 300-500) si è usato il valore medio (400)
grand_prix_km_v1 <- as_tibble(read_csv("data\\grand_prix_km_v1.csv"))
races_km = %>% select(year,raceId)
# Calcolo KM totali percorsi in F1
# Mi baso sul n° di km da percorrere per ciascun gran premio (in base ai vari regolamenti dei vari anni) (dati trovati su internet)
# il n° è una stima dei km percorsi da ogni pilota (che ha completato la gara) in ogni grand prix di quella stagione, qualora il regolamento prevedesse dei range (vedi 300-500) si è usato il valore medio (400)
grand_prix_km_v1 <- as_tibble(read_csv("data\\grand_prix_km_v1.csv"))
races_km = races %>% select(year,raceId)
races_km = inner_join(races_km,grand_prix_km_v1,by=year)
# Calcolo KM totali percorsi in F1
# Mi baso sul n° di km da percorrere per ciascun gran premio (in base ai vari regolamenti dei vari anni) (dati trovati su internet)
# il n° è una stima dei km percorsi da ogni pilota (che ha completato la gara) in ogni grand prix di quella stagione, qualora il regolamento prevedesse dei range (vedi 300-500) si è usato il valore medio (400)
grand_prix_km_v1 <- as_tibble(read_csv("data\\grand_prix_km_v1.csv"))
races_km = races %>% select(year,raceId)
races_km = inner_join(races_km,grand_prix_km_v1,by="year")
# Calcolo KM totali percorsi in F1
# Mi baso sul n° di km da percorrere per ciascun gran premio (in base ai vari regolamenti dei vari anni) (dati trovati su internet)
# il n° è una stima dei km percorsi da ogni pilota (che ha completato la gara) in ogni grand prix di quella stagione, qualora il regolamento prevedesse dei range (vedi 300-500) si è usato il valore medio (400)
grand_prix_km_v1 <- as_tibble(read_csv("data\\grand_prix_km_v1.csv"))
grand_prix_km_v1$year = as.numeric(grand_prix_km_v1$year)
races_km = races %>% select(year,raceId)
races_km = inner_join(races_km,grand_prix_km_v1,by="year")
grand_prix_km_v1
# Calcolo KM totali percorsi in F1
# Mi baso sul n° di km da percorrere per ciascun gran premio (in base ai vari regolamenti dei vari anni) (dati trovati su internet)
# il n° è una stima dei km percorsi da ogni pilota (che ha completato la gara) in ogni grand prix di quella stagione, qualora il regolamento prevedesse dei range (vedi 300-500) si è usato il valore medio (400)
grand_prix_km_v1 <- as_tibble(read_csv("data\\grand_prix_km_v1.csv"))
grand_prix_km_v1$year = as.numeric(grand_prix_km_v1$year)
races_km = races %>% select(year,raceId)
races_km = inner_join(races_km,grand_prix_km_v1,by="year")
# Calcolo KM totali percorsi in F1
# Mi baso sul n° di km da percorrere per ciascun gran premio (in base ai vari regolamenti dei vari anni) (dati trovati su internet)
# il n° è una stima dei km percorsi da ogni pilota (che ha completato la gara) in ogni grand prix di quella stagione, qualora il regolamento prevedesse dei range (vedi 300-500) si è usato il valore medio (400)
grand_prix_km_v1 <- as_tibble(read_csv("data\\grand_prix_km_v1.csv"))
grand_prix_km_v1$year = as.numeric(grand_prix_km_v1$year)
races_km = races %>% select(year,raceId)
races_km = inner_join(races_km,grand_prix_km_v1,by="year")
# Calcolo KM totali percorsi in F1
# Mi baso sul n° di km da percorrere per ciascun gran premio (in base ai vari regolamenti dei vari anni) (dati trovati su internet)
# il n° è una stima dei km percorsi da ogni pilota (che ha completato la gara) in ogni grand prix di quella stagione, qualora il regolamento prevedesse dei range (vedi 300-500) si è usato il valore medio (400)
grand_prix_km_v1 <- as_tibble(read_csv("data\\grand_prix_km_v1.csv"))
grand_prix_km_v1$year = as.numeric(grand_prix_km_v1$year)
races_km = races %>% select(year,raceId)
races_km = inner_join(races_km,grand_prix_km_v1,by="year")
View(grand_prix_km_v1)
# Calcolo KM totali percorsi in F1
# Mi baso sul n° di km da percorrere per ciascun gran premio (in base ai vari regolamenti dei vari anni) (dati trovati su internet)
# il n° è una stima dei km percorsi da ogni pilota (che ha completato la gara) in ogni grand prix di quella stagione, qualora il regolamento prevedesse dei range (vedi 300-500) si è usato il valore medio (400)
grand_prix_km_v1 <- as_tibble(read.csv("mtcars.csv")("data\\grand_prix_km_v1.txt"))
# Calcolo KM totali percorsi in F1
# Mi baso sul n° di km da percorrere per ciascun gran premio (in base ai vari regolamenti dei vari anni) (dati trovati su internet)
# il n° è una stima dei km percorsi da ogni pilota (che ha completato la gara) in ogni grand prix di quella stagione, qualora il regolamento prevedesse dei range (vedi 300-500) si è usato il valore medio (400)
grand_prix_km_v1 <- as_tibble(read.csv("data\\grand_prix_km_v1.txt"))
# Calcolo KM totali percorsi in F1
# Mi baso sul n° di km da percorrere per ciascun gran premio (in base ai vari regolamenti dei vari anni) (dati trovati su internet)
# il n° è una stima dei km percorsi da ogni pilota (che ha completato la gara) in ogni grand prix di quella stagione, qualora il regolamento prevedesse dei range (vedi 300-500) si è usato il valore medio (400)
grand_prix_km_v1 <- as_tibble(read.table("data\\grand_prix_km_v1.txt"))
# Calcolo KM totali percorsi in F1
# Mi baso sul n° di km da percorrere per ciascun gran premio (in base ai vari regolamenti dei vari anni) (dati trovati su internet)
# il n° è una stima dei km percorsi da ogni pilota (che ha completato la gara) in ogni grand prix di quella stagione, qualora il regolamento prevedesse dei range (vedi 300-500) si è usato il valore medio (400)
grand_prix_km_v1 <- as_tibble(read_csv("data\\grand_prix_km.txt"))
grand_prix_km_v1$year = as.numeric(grand_prix_km_v1$year)
races_km = races %>% select(year,raceId)
races_km = inner_join(races_km,grand_prix_km_v1,by="year")
View(grand_prix_km_v1)
races_km
View(driverStand)
View(results)
# Calcolo KM totali percorsi in F1
# Mi baso sul n° di km da percorrere per ciascun gran premio (in base ai vari regolamenti dei vari anni) (dati trovati su internet)
# il n° è una stima dei km percorsi da ogni pilota (che ha completato la gara) in ogni grand prix di quella stagione, qualora il regolamento prevedesse dei range (vedi 300-500) si è usato il valore medio (400)
grand_prix_km_v1 <- as_tibble(read_csv("data\\grand_prix_km.txt"))
# Ora per ciascuna gara conto il numero di piloti che l'hanno percorsa
counts = results %>% select(driverId,raceId)
# Calcolo KM totali percorsi in F1
# Mi baso sul n° di km da percorrere per ciascun gran premio (in base ai vari regolamenti dei vari anni) (dati trovati su internet)
# il n° è una stima dei km percorsi da ogni pilota (che ha completato la gara) in ogni grand prix di quella stagione, qualora il regolamento prevedesse dei range (vedi 300-500) si è usato il valore medio (400)
grand_prix_km_v1 <- as_tibble(read_csv("data\\grand_prix_km.txt"))
grand_prix_km_v1$year = as.numeric(grand_prix_km_v1$year)
races_km = races %>% select(year,raceId)
races_km = inner_join(races_km,grand_prix_km_v1,by="year")
# Ora per ciascuna gara conto il numero di piloti che l'hanno percorsa
counts = results %>% select(driverId,raceId)
# Ora per ciascuna gara conto il numero di piloti che l'hanno percorsa
counts = results %>% select(driverId,raceId)
counts
# Calcolo KM totali percorsi in F1
# Mi baso sul n° di km da percorrere per ciascun gran premio (in base ai vari regolamenti dei vari anni) (dati trovati su internet)
# il n° è una stima dei km percorsi da ogni pilota (che ha completato la gara) in ogni grand prix di quella stagione, qualora il regolamento prevedesse dei range (vedi 300-500) si è usato il valore medio (400)
grand_prix_km_v1 <- as_tibble(read_csv("data\\grand_prix_km.txt"))
grand_prix_km_v1$year = as.numeric(grand_prix_km_v1$year)
races_km = races %>% select(year,raceId)
races_km = inner_join(races_km,grand_prix_km_v1,by="year")
# Ora per ciascuna gara conto il numero di piloti che l'hanno percorsa
counts = results %>% select(driverId,raceId) %>% count(raceId)
counts
races_km = inner_join(races_km,counts,by="raceId")
races_km
# Ora per ciascuna gara conto il numero di piloti che l'hanno percorsa
counts = results %>% select(driverId,raceId) %>% count(raceId) %>% rename(partecipants=n)
counts
# Calcolo KM totali percorsi in F1
# Mi baso sul n° di km da percorrere per ciascun gran premio (in base ai vari regolamenti dei vari anni) (dati trovati su internet)
# il n° è una stima dei km percorsi da ogni pilota (che ha completato la gara) in ogni grand prix di quella stagione, qualora il regolamento prevedesse dei range (vedi 300-500) si è usato il valore medio (400)
grand_prix_km_v1 <- as_tibble(read_csv("data\\grand_prix_km.txt"))
grand_prix_km_v1$year = as.numeric(grand_prix_km_v1$year)
races_km = races %>% select(year,raceId)
races_km = inner_join(races_km,grand_prix_km_v1,by="year")
# Ora per ciascuna gara conto il numero di piloti che l'hanno percorsa
counts = results %>% select(driverId,raceId) %>% count(raceId) %>% rename(partecipants=n)
races_km = inner_join(races_km,counts,by="raceId") %>% mutate(tot_km=partecipants*estimated_tot_km_per_driver)
races_km
races_km = inner_join(races_km,counts,by="raceId") %>% mutate(tot_km=partecipants*estimated_tot_km_per_driver*0.95)
# Calcolo KM totali percorsi in F1
# Mi baso sul n° di km da percorrere per ciascun gran premio (in base ai vari regolamenti dei vari anni) (dati trovati su internet)
# il n° è una stima dei km percorsi da ogni pilota (che ha completato la gara) in ogni grand prix di quella stagione, qualora il regolamento prevedesse dei range (vedi 300-500) si è usato il valore medio (400)
grand_prix_km_v1 <- as_tibble(read_csv("data\\grand_prix_km.txt"))
grand_prix_km_v1$year = as.numeric(grand_prix_km_v1$year)
races_km = races %>% select(year,raceId)
races_km = inner_join(races_km,grand_prix_km_v1,by="year")
# Ora per ciascuna gara conto il numero di piloti che l'hanno percorsa
counts = results %>% select(driverId,raceId) %>% count(raceId) %>% rename(partecipants=n)
# Calcolo per ciascuna gara il n° totale di km percorsi dai partecipanti (rimuovendo il 5% di scarto: ritiri, incidenti, etc.)
races_km = inner_join(races_km,counts,by="raceId") %>% mutate(tot_km=partecipants*estimated_tot_km_per_driver*0.95)
tot_f1_km = sum(races_km$tot_km)
tot_f1_km
rm(grand_prix_km_v1,counts,races_km)
# Calcolo KM totali percorsi in F1
# Mi baso sul n° di km da percorrere per ciascun gran premio (in base ai vari regolamenti dei vari anni) (dati trovati su internet)
# il n° è una stima dei km percorsi da ogni pilota (che ha completato la gara) in ogni grand prix di quella stagione, qualora il regolamento prevedesse dei range (vedi 300-500) si è usato il valore medio (400)
grand_prix_km_v1 <- as_tibble(read_csv("data\\grand_prix_km.txt"))
grand_prix_km_v1$year = as.numeric(grand_prix_km_v1$year)
races_km = races %>% select(year,raceId)
races_km = inner_join(races_km,grand_prix_km_v1,by="year")
# Ora per ciascuna gara conto il numero di piloti che l'hanno percorsa
counts = results %>% select(driverId,raceId) %>% count(raceId) %>% rename(partecipants=n)
# Calcolo per ciascuna gara il n° totale di km percorsi dai partecipanti (rimuovendo il 5% di scarto: ritiri, incidenti, etc.)
races_km = inner_join(races_km,counts,by="raceId") %>% mutate(tot_km=partecipants*estimated_tot_km_per_driver*0.95)
tot_f1_km = sum(races_km$tot_km)
tot_f1_km
circonferenza_terra=40075
circonferenza_sole=4379000
terre_percorse=tot_f1_km/circonferenza_terra
soli_percorsi=tot_f1_km/ciconferenza_sole
# Calcolo KM totali percorsi in F1
# Mi baso sul n° di km da percorrere per ciascun gran premio (in base ai vari regolamenti dei vari anni) (dati trovati su internet)
# il n° è una stima dei km percorsi da ogni pilota (che ha completato la gara) in ogni grand prix di quella stagione, qualora il regolamento prevedesse dei range (vedi 300-500) si è usato il valore medio (400)
grand_prix_km_v1 <- as_tibble(read_csv("data\\grand_prix_km.txt"))
grand_prix_km_v1$year = as.numeric(grand_prix_km_v1$year)
races_km = races %>% select(year,raceId)
races_km = inner_join(races_km,grand_prix_km_v1,by="year")
# Ora per ciascuna gara conto il numero di piloti che l'hanno percorsa
counts = results %>% select(driverId,raceId) %>% count(raceId) %>% rename(partecipants=n)
# Calcolo per ciascuna gara il n° totale di km percorsi dai partecipanti (rimuovendo il 5% di scarto: ritiri, incidenti, etc.)
races_km = inner_join(races_km,counts,by="raceId") %>% mutate(tot_km=partecipants*estimated_tot_km_per_driver*0.95)
tot_f1_km = sum(races_km$tot_km)
tot_f1_km
circonferenza_terra=40075
circonferenza_sole=4379000
terre_percorse=tot_f1_km/circonferenza_terra
soli_percorsi=tot_f1_km/circonferenza_sole
rm(grand_prix_km_v1,counts,races_km)
# Calcolo KM totali percorsi in F1
# Mi baso sul n° di km da percorrere per ciascun gran premio (in base ai vari regolamenti dei vari anni) (dati trovati su internet)
# il n° è una stima dei km percorsi da ogni pilota (che ha completato la gara) in ogni grand prix di quella stagione, qualora il regolamento prevedesse dei range (vedi 300-500) si è usato il valore medio (400)
grand_prix_km_v1 <- as_tibble(read_csv("data\\grand_prix_km.txt"))
grand_prix_km_v1$year = as.numeric(grand_prix_km_v1$year)
races_km = races %>% select(year,raceId)
races_km = inner_join(races_km,grand_prix_km_v1,by="year")
# Ora per ciascuna gara conto il numero di piloti che l'hanno percorsa
counts = results %>% select(driverId,raceId) %>% count(raceId) %>% rename(partecipants=n)
# Calcolo per ciascuna gara il n° totale di km percorsi dai partecipanti (rimuovendo il 5% di scarto: ritiri, incidenti, etc.)
races_km = inner_join(races_km,counts,by="raceId") %>% mutate(tot_km=partecipants*estimated_tot_km_per_driver*0.95)
tot_f1_km = sum(races_km$tot_km)
tot_f1_km
circonferenza_terra=40075
circonferenza_sole=4379000
terre_percorse=tot_f1_km/circonferenza_terra
soli_percorsi=tot_f1_km/circonferenza_sole
terre_percorse
soli_percorsi
rm(grand_prix_km_v1,counts,races_km)
# Calcolo KM totali percorsi in F1
# Mi baso sul n° di km da percorrere per ciascun gran premio (in base ai vari regolamenti dei vari anni) (dati trovati su internet)
# il n° è una stima dei km percorsi da ogni pilota (che ha completato la gara) in ogni grand prix di quella stagione, qualora il regolamento prevedesse dei range (vedi 300-500) si è usato il valore medio (400)
grand_prix_km_v1 <- as_tibble(read_csv("data\\grand_prix_km.txt"))
grand_prix_km_v1$year = as.numeric(grand_prix_km_v1$year)
races_km = races %>% select(year,raceId)
races_km = inner_join(races_km,grand_prix_km_v1,by="year")
# Ora per ciascuna gara conto il numero di piloti che l'hanno percorsa
counts = results %>% select(driverId,raceId) %>% count(raceId) %>% rename(partecipants=n)
# Calcolo per ciascuna gara il n° totale di km percorsi dai partecipanti (rimuovendo il 5% di scarto: ritiri, incidenti, etc.)
races_km = inner_join(races_km,counts,by="raceId") %>% mutate(tot_km=partecipants*estimated_tot_km_per_driver*0.95)
tot_f1_km_percorsi = sum(races_km$tot_km)
circonferenza_terra=40075
circonferenza_sole=4379000
terre_percorse=tot_f1_km_percorsi/circonferenza_terra
soli_percorsi=tot_f1_km_percorsi/circonferenza_sole
tot_f1_km_percorsi
terre_percorse
soli_percorsi
rm(grand_prix_km_v1,counts,races_km)
# Calcolo KM totali percorsi in F1
# Mi baso sul n° di km da percorrere per ciascun gran premio (in base ai vari regolamenti dei vari anni) (dati trovati su internet)
# il n° è una stima dei km percorsi da ogni pilota (che ha completato la gara) in ogni grand prix di quella stagione, qualora il regolamento prevedesse dei range (vedi 300-500) si è usato il valore medio (400)
grand_prix_km_v1 <- as_tibble(read_csv("data\\grand_prix_km.txt"))
grand_prix_km_v1$year = as.numeric(grand_prix_km_v1$year)
races_km = races %>% select(year,raceId)
races_km = inner_join(races_km,grand_prix_km_v1,by="year")
# Ora per ciascuna gara conto il numero di piloti che l'hanno percorsa
counts = results %>% select(driverId,raceId) %>% count(raceId) %>% rename(partecipants=n)
# Calcolo per ciascuna gara il n° totale di km percorsi dai partecipanti (rimuovendo il 5% di scarto: ritiri, incidenti, etc.)
races_km = inner_join(races_km,counts,by="raceId") %>% mutate(tot_km=partecipants*estimated_tot_km_per_driver*0.95)
tot_f1_km_percorsi = sum(races_km$tot_km)
circonferenza_terra=40075
circonferenza_sole=4379000
terre_percorse=tot_f1_km_percorsi/circonferenza_terra
soli_percorsi=tot_f1_km_percorsi/circonferenza_sole
tot_f1_km_percorsi
terre_percorse
soli_percorsi
rm(grand_prix_km_v1,counts,races_km)
# Calcolo KM totali percorsi in F1
# Mi baso sul n° di km da percorrere per ciascun gran premio (in base ai vari regolamenti dei vari anni) (dati trovati su internet)
# il n° è una stima dei km percorsi da ogni pilota (che ha completato la gara) in ogni grand prix di quella stagione, qualora il regolamento prevedesse dei range (vedi 300-500) si è usato il valore medio (400)
grand_prix_km_v1 <- as_tibble(read_csv("data\\grand_prix_km.txt"))
grand_prix_km_v1$year = as.numeric(grand_prix_km_v1$year)
races_km = races %>% select(year,raceId)
races_km = inner_join(races_km,grand_prix_km_v1,by="year")
# Ora per ciascuna gara conto il numero di piloti che l'hanno percorsa
counts = results %>% select(driverId,raceId) %>% count(raceId) %>% rename(partecipants=n)
# Calcolo per ciascuna gara il n° totale di km percorsi dai partecipanti (rimuovendo il 5% di scarto: ritiri, incidenti, etc.)
races_km = inner_join(races_km,counts,by="raceId") %>% mutate(tot_km=partecipants*estimated_tot_km_per_driver*0.95)
tot_f1_km_percorsi = sum(races_km$tot_km)
circonferenza_terra=40075
circonferenza_sole=4379000
distanza_marte_terra=187640000
terre_percorse=tot_f1_km_percorsi/circonferenza_terra
soli_percorsi=tot_f1_km_percorsi/circonferenza_sole
distanze_m_t=tot_f1_km_percorsi/distanza_marte_terra
tot_f1_km_percorsi
terre_percorse
soli_percorsi
distanze_m_t
rm(grand_prix_km_v1,counts,races_km)
knitr::include_graphics("imgs\\distances_img.jpg")
