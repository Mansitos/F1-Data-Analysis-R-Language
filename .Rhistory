vis.nodes = nodes %>% mutate(label=id)
vis.nodes$label = vis.nodes$id
vis.nodes$size = (vis.nodes$size +0.325)*65
vis.nodes$borderWidth <- 2 # Node border width
vis.arcs$color <- "gray"
vis.arcs$width <- 1
vis.arcs$shadow <- FALSE
net = visNetwork(vis.nodes, vis.arcs,background="white")
visOptions(net,highlightNearest = TRUE)
# iGraph tests
library(igraph)
edges = unique(results %>% select(driverId,constructorId))
id_name_drivers = driver_stats %>% select(full_name,driverId)
id_name_constr =  constr_stats %>% select(name,constructorId)
edges = inner_join(id_name_constr,edges,by="constructorId")
edges = inner_join(id_name_drivers,edges,by="driverId")
edges = edges %>% select(full_name,name) %>% rename(from=full_name,to=name)
dg = graph_from_data_frame(edges, directed=FALSE)
coords = layout_with_fr(dg)
plot(dg, layout=layout.circle, main="What a MESS :o)",
vertex.size = 3, vertex.color = "black",
edge.width = 1, edge.color = "grey",
vertex.label.cex=0.5)
degrees = as.data.frame(degree(dg, mode = "total"))
degrees <- cbind(id = rownames(degrees), degrees)
rownames(degrees) <- 1:nrow(degrees)
degrees = degrees %>% rename(full_name=id)
drivers_degrees = inner_join(degrees,id_name_drivers,by="full_name")
degrees = degrees %>% rename(name=id)
degrees = degrees %>% rename(name=full_name)
drivers_constr = inner_join(degrees,id_name_constr,by="name")
degrees = degrees %>% rename(id=name)
degrees
drivers_degrees
degree = degree %>% rename(degree=2)
edges = unique(results %>% select(driverId,constructorId))
id_name_drivers = driver_stats %>% select(full_name,driverId)
id_name_constr =  constr_stats %>% select(name,constructorId)
edges = inner_join(id_name_constr,edges,by="constructorId")
edges = inner_join(id_name_drivers,edges,by="driverId")
edges = edges %>% select(full_name,name) %>% rename(from=full_name,to=name)
dg = graph_from_data_frame(edges, directed=FALSE)
coords = layout_with_fr(dg)
plot(dg, layout=layout.circle, main="What a MESS :o)",
vertex.size = 3, vertex.color = "black",
edge.width = 1, edge.color = "grey",
vertex.label.cex=0.5)
plot(dg, layout=layout.circle, main="What a MESS :o)",
vertex.size = 3, vertex.color = "black",
edge.width = 1, edge.color = "grey",
vertex.label.cex=0.5)
degrees = as.data.frame(degree(dg, mode = "total"))
degrees = as.data.frame(degree(dg, mode = "total"))
degrees <- cbind(id = rownames(degrees), degrees)
colnames(degree)[2] <- "degree"
edges = unique(results %>% select(driverId,constructorId))
id_name_drivers = driver_stats %>% select(full_name,driverId)
id_name_constr =  constr_stats %>% select(name,constructorId)
edges = inner_join(id_name_constr,edges,by="constructorId")
edges = inner_join(id_name_drivers,edges,by="driverId")
edges = edges %>% select(full_name,name) %>% rename(from=full_name,to=name)
dg = graph_from_data_frame(edges, directed=FALSE)
coords = layout_with_fr(dg)
plot(dg, layout=layout.circle, main="What a MESS :o)",
vertex.size = 3, vertex.color = "black",
edge.width = 1, edge.color = "grey",
vertex.label.cex=0.5)
plot(dg, layout=layout.circle, main="What a MESS :o)",
vertex.size = 3, vertex.color = "black",
edge.width = 1, edge.color = "grey",
vertex.label.cex=0.5)
degrees = as.data.frame(degree(dg, mode = "total"))
degrees = as.data.frame(degree(dg, mode = "total"))
degrees <- cbind(id = rownames(degrees), degrees)
colnames(degree)[1] <- "degree"
colnames(degrees)
colnames(degree)[1] <- c("id","degree")
colnames(degree)[1]
colnames(degree)[,1]
colnames(degree)[[1]]
colnames(degree)[0]
colnames(degree)
# iGraph tests
library(igraph)
edges = unique(results %>% select(driverId,constructorId))
id_name_drivers = driver_stats %>% select(full_name,driverId)
id_name_constr =  constr_stats %>% select(name,constructorId)
edges = inner_join(id_name_constr,edges,by="constructorId")
edges = inner_join(id_name_drivers,edges,by="driverId")
edges = edges %>% select(full_name,name) %>% rename(from=full_name,to=name)
dg = graph_from_data_frame(edges, directed=FALSE)
coords = layout_with_fr(dg)
plot(dg, layout=layout.circle, main="What a MESS :o)",
vertex.size = 3, vertex.color = "black",
edge.width = 1, edge.color = "grey",
vertex.label.cex=0.5)
degrees = as.data.frame(degree(dg, mode = "total"))
degrees <- cbind(id = rownames(degrees), degrees)
rownames(degrees) <- 1:nrow(degrees)
colnames(degrees)[2] <- "degree"
degrees = degrees %>% rename(full_name=id)
drivers_degrees = inner_join(degrees,id_name_drivers,by="full_name")
degrees = degrees %>% rename(name=full_name)
drivers_constr = inner_join(degrees,id_name_constr,by="name")
degrees = degrees %>% rename(id=name)
drivers_degrees
data = drivers_degrees  %>% arrange(desc(degree))
ggplot(data=data[10,],aes(x= reorder(country,degree),y=degree)) +
geom_bar(aes(fill=degree),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.5, 0, 0, "cm"),plot.title = element_text(size = 10,face="bold")) +
scale_y_continuous(breaks = pretty(data$degree, n = 10)) +
labs(x="",y="",title="degree")+
coord_flip()+
scale_fill_distiller(palette="YlOrRd",direction = 1)
ggplot(data=data[10,],aes(x= reorder(full_name,degree),y=degree)) +
geom_bar(aes(fill=degree),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.5, 0, 0, "cm"),plot.title = element_text(size = 10,face="bold")) +
scale_y_continuous(breaks = pretty(data$degree, n = 10)) +
labs(x="",y="",title="degree")+
coord_flip()+
scale_fill_distiller(palette="YlOrRd",direction = 1)
ggplot(data=data[1:10,],aes(x= reorder(full_name,degree),y=degree)) +
geom_bar(aes(fill=degree),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.5, 0, 0, "cm"),plot.title = element_text(size = 10,face="bold")) +
scale_y_continuous(breaks = pretty(data$degree, n = 10)) +
labs(x="",y="",title="degree")+
coord_flip()+
scale_fill_distiller(palette="YlOrRd",direction = 1)
ggplot(data=data[1:20,],aes(x= reorder(full_name,degree),y=degree)) +
geom_bar(aes(fill=degree),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.5, 0, 0, "cm"),plot.title = element_text(size = 10,face="bold")) +
scale_y_continuous(breaks = pretty(data$degree, n = 10)) +
labs(x="",y="",title="degree")+
coord_flip()+
scale_fill_distiller(palette="YlOrRd",direction = 1)
data = constr_degrees  %>% arrange(desc(degree))
ggplot(data=data[1:20,],aes(x= reorder(name,degree),y=degree)) +
geom_bar(aes(fill=degree),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.5, 0, 0, "cm"),plot.title = element_text(size = 10,face="bold")) +
scale_y_continuous(breaks = pretty(data$degree, n = 10)) +
labs(x="",y="",title="degree")+
coord_flip()+
scale_fill_distiller(palette="YlOrRd",direction = 1)
# iGraph tests
library(igraph)
edges = unique(results %>% select(driverId,constructorId))
id_name_drivers = driver_stats %>% select(full_name,driverId)
id_name_constr =  constr_stats %>% select(name,constructorId)
edges = inner_join(id_name_constr,edges,by="constructorId")
edges = inner_join(id_name_drivers,edges,by="driverId")
edges = edges %>% select(full_name,name) %>% rename(from=full_name,to=name)
dg = graph_from_data_frame(edges, directed=FALSE)
coords = layout_with_fr(dg)
plot(dg, layout=layout.circle, main="What a MESS :o)",
vertex.size = 3, vertex.color = "black",
edge.width = 1, edge.color = "grey",
vertex.label.cex=0.5)
degrees = as.data.frame(degree(dg, mode = "total"))
degrees <- cbind(id = rownames(degrees), degrees)
rownames(degrees) <- 1:nrow(degrees)
colnames(degrees)[2] <- "degree"
degrees = degrees %>% rename(full_name=id)
drivers_degrees = inner_join(degrees,id_name_drivers,by="full_name")
degrees = degrees %>% rename(name=full_name)
constr_degrees = inner_join(degrees,id_name_constr,by="name")
degrees = degrees %>% rename(id=name)
data = drivers_degrees  %>% arrange(desc(degree))
ggplot(data=data[1:20,],aes(x= reorder(full_name,degree),y=degree)) +
geom_bar(aes(fill=degree),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.5, 0, 0, "cm"),plot.title = element_text(size = 10,face="bold")) +
scale_y_continuous(breaks = pretty(data$degree, n = 10)) +
labs(x="",y="",title="degree")+
coord_flip()+
scale_fill_distiller(palette="YlOrRd",direction = 1)
data = constr_degrees  %>% arrange(desc(degree))
ggplot(data=data[1:20,],aes(x= reorder(name,degree),y=degree)) +
geom_bar(aes(fill=degree),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.5, 0, 0, "cm"),plot.title = element_text(size = 10,face="bold")) +
scale_y_continuous(breaks = pretty(data$degree, n = 10)) +
labs(x="",y="",title="degree")+
coord_flip()+
scale_fill_distiller(palette="YlOrRd",direction = 1)
data = drivers_degrees  %>% arrange(desc(degree))
x = ggplot(data=data[1:20,],aes(x= reorder(full_name,degree),y=degree)) +
geom_bar(aes(fill=degree),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.5, 0, 0, "cm"),plot.title = element_text(size = 10,face="bold")) +
scale_y_continuous(breaks = pretty(data$degree, n = 10)) +
labs(x="",y="",title="degree")+
coord_flip()+
scale_fill_distiller(palette="YlOrRd",direction = 1)
data = constr_degrees  %>% arrange(desc(degree))
y = ggplot(data=data[1:20,],aes(x= reorder(name,degree),y=degree)) +
geom_bar(aes(fill=degree),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.5, 0, 0, "cm"),plot.title = element_text(size = 10,face="bold")) +
scale_y_continuous(breaks = pretty(data$degree, n = 10)) +
labs(x="",y="",title="degree")+
coord_flip()+
scale_fill_distiller(palette="YlOrRd",direction = 1)
grid.arrange(x,y, ncol=2,widths=c(1,1))
data = drivers_degrees  %>% arrange(desc(degree))
x = ggplot(data=data[1:20,],aes(x= reorder(full_name,degree),y=degree)) +
geom_bar(aes(fill=degree),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.5, 0, 0, "cm"),plot.title = element_text(size = 10,face="bold")) +
scale_y_continuous(breaks = pretty(data$degree, n = 10)) +
labs(x="",y="",title="degree")+
coord_flip()+
scale_fill_distiller(palette="YlOrRd",direction = 1)
data = constr_degrees  %>% arrange(desc(degree))
y = ggplot(data=data[1:20,],aes(x= reorder(name,degree),y=degree)) +
geom_bar(aes(fill=degree),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.5, 0, 0, "cm"),plot.title = element_text(size = 10,face="bold")) +
scale_y_continuous(breaks = pretty(data$degree, n = 10)) +
labs(x="",y="",title="degree")+
coord_flip()+
scale_fill_distiller(palette="YlOrRd",direction = 1)
grid.arrange(x,y, ncol=2,widths=c(1,1))
data = drivers_degrees  %>% arrange(desc(degree))
x = ggplot(data=data[1:20,],aes(x= reorder(full_name,degree),y=degree)) +
geom_bar(aes(fill=degree),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.5, 0, 0, "cm"),plot.title = element_text(size = 10,face="bold")) +
scale_y_continuous(breaks = pretty(data$degree, n = 10)) +
labs(x="",y="",title="degree")+
coord_flip()+
scale_fill_distiller(palette="YlOrRd",direction = 1)
data = constr_degrees  %>% arrange(desc(degree))
y = ggplot(data=data[1:20,],aes(x= reorder(name,degree),y=degree)) +
geom_bar(aes(fill=degree),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.5, 0, 0, "cm"),plot.title = element_text(size = 10,face="bold")) +
scale_y_continuous(breaks = pretty(data$degree, n = 10)) +
labs(x="",y="",title="degree")+
coord_flip()+
scale_fill_distiller(palette="YlOrRd",direction = 1)
grid.arrange(x,y, ncol=2,widths=c(1,1))
gsize(gp)
gsize(gd)
gsize(dg)
data = drivers_degrees  %>% arrange(desc(degree))
x = ggplot(data=data[1:20,],aes(x= reorder(full_name,degree),y=degree)) +
geom_bar(aes(fill=degree),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.5, 0, 0, "cm"),plot.title = element_text(size = 10,face="bold")) +
scale_y_continuous(breaks = pretty(data$degree, n = 10)) +
labs(x="",y="",title="Top 20 drivers by n° of constr. they raced for")+
coord_flip()+
scale_fill_distiller(palette="YlOrRd",direction = 1)
data = constr_degrees  %>% arrange(desc(degree))
y = ggplot(data=data[1:20,],aes(x= reorder(name,degree),y=degree)) +
geom_bar(aes(fill=degree),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.5, 0, 0, "cm"),plot.title = element_text(size = 10,face="bold")) +
scale_y_continuous(breaks = pretty(data$degree, n = 10)) +
labs(x="",y="",title="Top 20 constructors by n° of drivers who raced for them")+
coord_flip()+
scale_fill_distiller(palette="YlOrRd",direction = 1)
grid.arrange(x,y, ncol=2,widths=c(1,1))
data = drivers_degrees  %>% arrange(desc(degree))
x = ggplot(data=data[1:20,],aes(x= reorder(full_name,degree),y=degree)) +
geom_bar(aes(fill=degree),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.5, 0, 0, "cm"),plot.title = element_text(size = 10,face="bold")) +
scale_y_continuous(breaks = pretty(data$degree, n = 10)) +
labs(x="",y="",title="Top 20 drivers by n° of constructors they raced for")+
coord_flip()+
scale_fill_distiller(palette="YlOrRd",direction = 1)
data = constr_degrees  %>% arrange(desc(degree))
y = ggplot(data=data[1:20,],aes(x= reorder(name,degree),y=degree)) +
geom_bar(aes(fill=degree),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.5, 0, 0, "cm"),plot.title = element_text(size = 10,face="bold")) +
scale_y_continuous(breaks = pretty(data$degree, n = 10)) +
labs(x="",y="",title="Top 20 constructors by n° of drivers who raced for them")+
coord_flip()+
scale_fill_distiller(palette="YlOrRd",direction = 1)
grid.arrange(x,y, ncol=2,widths=c(1,1))
data = drivers_degrees  %>% arrange(desc(degree))
x = ggplot(data=data[1:20,],aes(x= reorder(full_name,degree),y=degree)) +
geom_bar(aes(fill=degree),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.5, 0, 0, "cm"),plot.title = element_text(size = 10,face="bold")) +
scale_y_continuous(breaks = pretty(data$degree, n = 10)) +
labs(x="",y="",title="Top 20 drivers by n° of constructors they raced for")+
coord_flip()+
scale_fill_distiller(palette="YlOrRd",direction = 1)
data = constr_degrees  %>% arrange(desc(degree))
y = ggplot(data=data[1:20,],aes(x= reorder(name,degree),y=degree)) +
geom_bar(aes(fill=degree),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.5, 0, 0, "cm"),plot.title = element_text(size = 10,face="bold")) +
scale_y_continuous(breaks = pretty(data$degree, n = 10)) +
labs(x="",y="",title="Top 20 constructors by n° of drivers who raced for them")+
coord_flip()+
scale_fill_distiller(palette="PuRd",direction = 1)
grid.arrange(x,y, ncol=2,widths=c(1,1))
data = drivers_degrees  %>% arrange(desc(degree))
x = ggplot(data=data[1:20,],aes(x= reorder(full_name,degree),y=degree)) +
geom_bar(aes(fill=degree),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.5, 0, 0, "cm"),plot.title = element_text(size = 10,face="bold")) +
scale_y_continuous(breaks = pretty(data$degree, n = 10)) +
labs(x="",y="",title="Top 20 drivers by n° of constructors they raced for")+
coord_flip()+
scale_fill_distiller(palette="YlOrRd",direction = 1)
data = constr_degrees  %>% arrange(desc(degree))
y = ggplot(data=data[1:20,],aes(x= reorder(name,degree),y=degree)) +
geom_bar(aes(fill=degree),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.5, 0, 0, "cm"),plot.title = element_text(size = 10,face="bold")) +
scale_y_continuous(breaks = pretty(data$degree, n = 10)) +
labs(x="",y="",title="Top 20 constructors by n° of drivers who raced for them")+
coord_flip()+
scale_fill_distiller(palette="PuRd",direction = 1,limits=c(-0.03,0.39))
grid.arrange(x,y, ncol=2,widths=c(1,1))
data = drivers_degrees  %>% arrange(desc(degree))
x = ggplot(data=data[1:20,],aes(x= reorder(full_name,degree),y=degree)) +
geom_bar(aes(fill=degree),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.5, 0, 0, "cm"),plot.title = element_text(size = 10,face="bold")) +
scale_y_continuous(breaks = pretty(data$degree, n = 10)) +
labs(x="",y="",title="Top 20 drivers by n° of constructors they raced for")+
coord_flip()+
scale_fill_distiller(palette="YlOrRd",direction = 1)
data = constr_degrees  %>% arrange(desc(degree))
y = ggplot(data=data[1:20,],aes(x= reorder(name,degree),y=degree)) +
geom_bar(aes(fill=degree),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.5, 0, 0, "cm"),plot.title = element_text(size = 10,face="bold")) +
scale_y_continuous(breaks = pretty(data$degree, n = 10)) +
labs(x="",y="",title="Top 20 constructors by n° of drivers who raced for them")+
coord_flip()+
scale_fill_distiller(palette="PuRd",direction = 1,limits=c(10,100))
grid.arrange(x,y, ncol=2,widths=c(1,1))
data = drivers_degrees  %>% arrange(desc(degree))
x = ggplot(data=data[1:20,],aes(x= reorder(full_name,degree),y=degree)) +
geom_bar(aes(fill=degree),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.5, 0, 0, "cm"),plot.title = element_text(size = 10,face="bold")) +
scale_y_continuous(breaks = pretty(data$degree, n = 10)) +
labs(x="",y="",title="Top 20 drivers by n° of constructors they raced for")+
coord_flip()+
scale_fill_distiller(palette="YlOrRd",direction = 1)
data = constr_degrees  %>% arrange(desc(degree))
y = ggplot(data=data[1:20,],aes(x= reorder(name,degree),y=degree)) +
geom_bar(aes(fill=degree),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.5, 0, 0, "cm"),plot.title = element_text(size = 10,face="bold")) +
scale_y_continuous(breaks = pretty(data$degree, n = 10)) +
labs(x="",y="",title="Top 20 constructors by n° of drivers who raced for them")+
coord_flip()+
scale_fill_distiller(palette="PuRd",direction = 1,limits=c(0,100))
grid.arrange(x,y, ncol=2,widths=c(1,1))
data = drivers_degrees  %>% arrange(desc(degree))
x = ggplot(data=data[1:20,],aes(x= reorder(full_name,degree),y=degree)) +
geom_bar(aes(fill=degree),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.5, 0, 0, "cm"),plot.title = element_text(size = 10,face="bold")) +
scale_y_continuous(breaks = pretty(data$degree, n = 10)) +
labs(x="",y="",title="Top 20 drivers by n° of constructors they raced for")+
coord_flip()+
scale_fill_distiller(palette="PuRd",direction = 1,limits=c(3,14))
data = constr_degrees  %>% arrange(desc(degree))
y = ggplot(data=data[1:20,],aes(x= reorder(name,degree),y=degree)) +
geom_bar(aes(fill=degree),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.5, 0, 0, "cm"),plot.title = element_text(size = 10,face="bold")) +
scale_y_continuous(breaks = pretty(data$degree, n = 10)) +
labs(x="",y="",title="Top 20 constructors by n° of drivers who raced for them")+
coord_flip()+
scale_fill_distiller(palette="PuRd",direction = 1,limits=c(0,100))
grid.arrange(x,y, ncol=2,widths=c(1,1))
data = drivers_degrees  %>% arrange(desc(degree))
x = ggplot(data=data[1:20,],aes(x= reorder(full_name,degree),y=degree)) +
geom_bar(aes(fill=degree),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.5, 0, 0, "cm"),plot.title = element_text(size = 10,face="bold")) +
scale_y_continuous(breaks = pretty(data$degree, n = 10)) +
labs(x="",y="",title="Top 20 drivers by n° of constructors they raced for")+
coord_flip()+
scale_fill_distiller(palette="PuRd",direction = 1,limits=c(0,14))
data = constr_degrees  %>% arrange(desc(degree))
y = ggplot(data=data[1:20,],aes(x= reorder(name,degree),y=degree)) +
geom_bar(aes(fill=degree),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.5, 0, 0, "cm"),plot.title = element_text(size = 10,face="bold")) +
scale_y_continuous(breaks = pretty(data$degree, n = 10)) +
labs(x="",y="",title="Top 20 constructors by n° of drivers who raced for them")+
coord_flip()+
scale_fill_distiller(palette="PuRd",direction = 1,limits=c(0,100))
grid.arrange(x,y, ncol=2,widths=c(1,1))
data = drivers_degrees  %>% arrange(desc(degree))
x = ggplot(data=data[1:20,],aes(x= reorder(full_name,degree),y=degree)) +
geom_bar(aes(fill=degree),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.5, 0, 0, "cm"),plot.title = element_text(size = 10,face="bold")) +
scale_y_continuous(breaks = pretty(data$degree, n = 10)) +
labs(x="",y="",title="Top 20 drivers by n° of constructors they raced for")+
coord_flip()+
scale_fill_distiller(palette="PuRd",direction = 1,limits=c(4,14))
data = constr_degrees  %>% arrange(desc(degree))
y = ggplot(data=data[1:20,],aes(x= reorder(name,degree),y=degree)) +
geom_bar(aes(fill=degree),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.5, 0, 0, "cm"),plot.title = element_text(size = 10,face="bold")) +
scale_y_continuous(breaks = pretty(data$degree, n = 10)) +
labs(x="",y="",title="Top 20 constructors by n° of drivers who raced for them")+
coord_flip()+
scale_fill_distiller(palette="PuRd",direction = 1,limits=c(0,100))
grid.arrange(x,y, ncol=2,widths=c(1,1))
data = drivers_degrees  %>% arrange(desc(degree))
x = ggplot(data=data[1:20,],aes(x= reorder(full_name,degree),y=degree)) +
geom_bar(aes(fill=degree),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.5, 0, 0, "cm"),plot.title = element_text(size = 10,face="bold")) +
scale_y_continuous(breaks = pretty(data$degree, n = 10)) +
labs(x="",y="",title="Top 20 drivers by n° of constructors they raced for")+
coord_flip()+
scale_fill_distiller(palette="PuRd",direction = 1,limits=c(5,14))
data = constr_degrees  %>% arrange(desc(degree))
y = ggplot(data=data[1:20,],aes(x= reorder(name,degree),y=degree)) +
geom_bar(aes(fill=degree),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.5, 0, 0, "cm"),plot.title = element_text(size = 10,face="bold")) +
scale_y_continuous(breaks = pretty(data$degree, n = 10)) +
labs(x="",y="",title="Top 20 constructors by n° of drivers who raced for them")+
coord_flip()+
scale_fill_distiller(palette="PuRd",direction = 1,limits=c(0,100))
grid.arrange(x,y, ncol=2,widths=c(1,1))
knitr::include_graphics("imgs\\word_cloud.jpg")
# BUG? SOMETIMES SOME WORDS ARE OMMITTED??? FOR SAFETY USE A SAVED ONE WHICH WORKS.
# World cloud test con nazioni
if(TRUE){
wordcloud(country_stats$country,country_stats$score+4,scale=c(12,0.4),max.words = 100,min.freq = 1,random.order=FALSE,rot.per=0.35,ordered.colors = FALSE,random.color = TRUE,colors = brewer.pal(7,"YlOrRd")[c(3,4,4,5,5,6,6,7)])
}
# BUG? SOMETIMES SOME WORDS ARE OMMITTED??? FOR SAFETY USE A SAVED ONE WHICH WORKS.
# World cloud test con nazioni
if(TRUE){
wordcloud(country_stats$country,country_stats$score+4,scale=c(12,0.4),max.words = 100,min.freq = 1,random.order=FALSE,rot.per=0.35,ordered.colors = FALSE,random.color = TRUE,colors = brewer.pal(7,"YlOrRd")[c(3,4,4,5,5,6,6,7)])
}
# BUG? SOMETIMES SOME WORDS ARE OMMITTED??? FOR SAFETY USE A SAVED ONE WHICH WORKS.
# World cloud test con nazioni
if(TRUE){
wordcloud(country_stats$country,country_stats$score+4,scale=c(12,0.4),max.words = 100,min.freq = 1,random.order=FALSE,rot.per=0.35,ordered.colors = FALSE,random.color = TRUE,colors = brewer.pal(7,"YlOrRd")[c(3,4,4,5,5,6,6,7)])
}
# BUG? SOMETIMES SOME WORDS ARE OMMITTED??? FOR SAFETY USE A SAVED ONE WHICH WORKS.
# World cloud test con nazioni
if(TRUE){
wordcloud(country_stats$country,country_stats$score+4,scale=c(12,0.4),max.words = 100,min.freq = 1,random.order=FALSE,rot.per=0.35,ordered.colors = FALSE,random.color = TRUE,colors = brewer.pal(7,"YlOrRd")[c(3,4,4,5,5,6,6,7)])
}
# BUG? SOMETIMES SOME WORDS ARE OMMITTED??? FOR SAFETY USE A SAVED ONE WHICH WORKS.
# World cloud test con nazioni
if(TRUE){
wordcloud(country_stats$country,country_stats$score+4,scale=c(12,0.4),max.words = 100,min.freq = 1,random.order=FALSE,rot.per=0.35,ordered.colors = FALSE,random.color = TRUE,colors = brewer.pal(7,"YlOrRd")[c(3,4,4,5,5,6,6,7)])
}
# BUG? SOMETIMES SOME WORDS ARE OMMITTED??? FOR SAFETY USE A SAVED ONE WHICH WORKS.
# World cloud test con nazioni
if(TRUE){
wordcloud(country_stats$country,country_stats$score+4,scale=c(12,0.4),max.words = 100,min.freq = 1,random.order=FALSE,rot.per=0.35,ordered.colors = FALSE,random.color = TRUE,colors = brewer.pal(7,"YlOrRd")[c(3,4,4,5,5,6,6,7)])
}
# BUG? SOMETIMES SOME WORDS ARE OMMITTED??? FOR SAFETY USE A SAVED ONE WHICH WORKS.
# World cloud test con nazioni
if(TRUE){
wordcloud(country_stats$country,country_stats$score+4,scale=c(12,0.4),max.words = 100,min.freq = 1,random.order=FALSE,rot.per=0.35,ordered.colors = FALSE,random.color = TRUE,colors = brewer.pal(7,"YlOrRd")[c(3,4,4,5,5,6,6,7)])
}
# BUG? SOMETIMES SOME WORDS ARE OMMITTED??? FOR SAFETY USE A SAVED ONE WHICH WORKS.
# World cloud test con nazioni
if(TRUE){
wordcloud(country_stats$country,country_stats$score+4,scale=c(12,0.4),max.words = 100,min.freq = 1,random.order=FALSE,rot.per=0.35,ordered.colors = FALSE,random.color = TRUE,colors = brewer.pal(7,"YlOrRd")[c(3,4,4,5,5,6,6,7)])
}
# BUG? SOMETIMES SOME WORDS ARE OMMITTED??? FOR SAFETY USE A SAVED ONE WHICH WORKS.
# World cloud test con nazioni
if(TRUE){
wordcloud(country_stats$country,country_stats$score+4,scale=c(12,0.4),max.words = 100,min.freq = 1,random.order=FALSE,rot.per=0.35,ordered.colors = FALSE,random.color = TRUE,colors = brewer.pal(7,"YlOrRd")[c(3,4,4,5,5,6,6,7)])
}
# BUG? SOMETIMES SOME WORDS ARE OMMITTED??? FOR SAFETY USE A SAVED ONE WHICH WORKS.
# World cloud test con nazioni
if(TRUE){
wordcloud(country_stats$country,country_stats$score+4,scale=c(12,0.4),max.words = 100,min.freq = 1,random.order=FALSE,rot.per=0.35,ordered.colors = FALSE,random.color = TRUE,colors = brewer.pal(7,"YlOrRd")[c(3,4,4,5,5,6,6,7)])
}
# BUG? SOMETIMES SOME WORDS ARE OMMITTED??? FOR SAFETY USE A SAVED ONE WHICH WORKS.
# World cloud test con nazioni
if(TRUE){
wordcloud(country_stats$country,country_stats$score+4,scale=c(12,0.4),max.words = 100,min.freq = 1,random.order=FALSE,rot.per=0.35,ordered.colors = FALSE,random.color = TRUE,colors = brewer.pal(7,"YlOrRd")[c(3,4,4,5,5,6,6,7)])
}
# BUG? SOMETIMES SOME WORDS ARE OMMITTED??? FOR SAFETY USE A SAVED ONE WHICH WORKS.
# World cloud test con nazioni
if(TRUE){
wordcloud(country_stats$country,country_stats$score+4,scale=c(12,0.4),max.words = 100,min.freq = 1,random.order=FALSE,rot.per=0.35,ordered.colors = FALSE,random.color = TRUE,colors = brewer.pal(7,"YlOrRd")[c(3,4,4,5,5,6,6,7)])
}
# BUG? SOMETIMES SOME WORDS ARE OMMITTED??? FOR SAFETY USE A SAVED ONE WHICH WORKS.
# World cloud test con nazioni
if(TRUE){
wordcloud(country_stats$country,country_stats$score+4,scale=c(12,0.4),max.words = 100,min.freq = 1,random.order=FALSE,rot.per=0.35,ordered.colors = FALSE,random.color = TRUE,colors = brewer.pal(7,"YlOrRd")[c(3,4,4,5,5,6,6,7)])
}
# BUG? SOMETIMES SOME WORDS ARE OMMITTED??? FOR SAFETY USE A SAVED ONE WHICH WORKS.
# World cloud test con nazioni
if(TRUE){
wordcloud(country_stats$country,country_stats$score+4,scale=c(12,0.4),max.words = 100,min.freq = 1,random.order=FALSE,rot.per=0.35,ordered.colors = FALSE,random.color = TRUE,colors = brewer.pal(7,"YlOrRd")[c(3,4,4,5,5,6,6,7)])
}
knitr::include_graphics("imgs\\word_cloud.png")
reactable(data,searchable = TRUE,bordered = TRUE,height = 500)
x = reactable(data,searchable = TRUE,bordered = TRUE,height = 500)
y = reactable(data,searchable = TRUE,bordered = TRUE,height = 500)
grid.arrange(x,y, ncol=2,widths=c(1,1))
constr_degrees
data = drivers_degrees  %>% arrange(desc(degree)) %>% rename(Name=name,"n° of drivers (degree)"=degree)
data = constr_degrees  %>% arrange(desc(degree)) %>% rename(Name=name,"n° of drivers (degree)"=degree)
data
data = drivers_degrees  %>% arrange(desc(degree))
x = ggplot(data=data[1:20,],aes(x= reorder(full_name,degree),y=degree)) +
geom_bar(aes(fill=degree),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.5, 0, 0, "cm"),plot.title = element_text(size = 10,face="bold")) +
scale_y_continuous(breaks = pretty(data$degree, n = 10)) +
labs(x="",y="",title="Top 20 drivers by n° of constructors they raced for")+
coord_flip()+
scale_fill_distiller(palette="PuRd",direction = 1,limits=c(5,14))
data = constr_degrees  %>% arrange(desc(degree))
y = ggplot(data=data[1:20,],aes(x= reorder(name,degree),y=degree)) +
geom_bar(aes(fill=degree),color="black",size=0.35,stat = 'identity', show.legend = FALSE) +
theme(axis.text.x = element_text(angle=52.5, vjust=1, hjust=1,size=9), plot.margin = margin(0.2, 0.5, 0, 0, "cm"),plot.title = element_text(size = 10,face="bold")) +
scale_y_continuous(breaks = pretty(data$degree, n = 10)) +
labs(x="",y="",title="Top 20 constructors by n° of drivers who raced for them")+
coord_flip()+
scale_fill_distiller(palette="PuRd",direction = 1,limits=c(0,100))
grid.arrange(x,y, ncol=2,widths=c(1,1))
data = drivers_degrees  %>% arrange(desc(degree)) %>% rename(Name=full_name,"n° of constructors (degree)"=degree) %>% select(-driverId)
reactable(data,searchable = TRUE,bordered = TRUE,height = 300)
data = constr_degrees  %>% arrange(desc(degree)) %>% rename(Name=name,"n° of drivers (degree)"=degree) %>% select(-constructorId)
reactable(data,searchable = TRUE,bordered = TRUE,height = 300)
knitr::include_graphics("imgs\\word_cloud.png")
knitr::include_graphics("imgs\\word_cloud.png")
knitr::include_graphics("imgs\\word_cloud.png")
?visLegend
??visLegend
