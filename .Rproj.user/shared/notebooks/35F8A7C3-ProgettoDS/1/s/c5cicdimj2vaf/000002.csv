"0",""
"0","# NORMALIZZAZIONE dei dati relativi ai punteggi. Idea: assegnare a ciascun risultato dal 1950 al 2020 i punti del sistema 2020, cosÃ¬ da premiare ciascuna posizione"
"0","# con lo stesso numero di punti"
"0",""
"0","# funzione posizione -> punti"
"0","calculate_points <- function(position){"
"0","  if(is.na(position)){return(0)}"
"0","  position = as.numeric(position)"
"0","  if(position==1){return(25)}"
"0","  else if(position==2){return(18)}"
"0","  else if(position==3){return(15)}"
"0","  else if(position==4){return(12)}"
"0","  else if(position==5){return(10)}"
"0","  else if(position==6){return(8)}"
"0","  else if(position==7){return(6)}"
"0","  else if(position==8){return(4)}"
"0","  else if(position==9){return(2)}"
"0","  else if(position==10){return(1)}"
"0","  return(0)"
"0","}"
"0",""
"0","# applico la funzione di conversione dei punti"
"0","points$updated_points = lapply(points$position,calculate_points)"
"0","points$updated_points = as.numeric(points$updated_points)"
"0",""
"0","# somma dei punti totali (nuovo sistema) per ciascun driver"
"0","points_stats_new = aggregate(points$updated_points,by=list(driverId=points$driverId),FUN=sum) %>% rename(tot_poits_new=x)"
"0",""
"0","# aggiungo la colonna a points stats"
"0","points_stats = inner_join(points_stats,points_stats_new,by=""driverId"")"
"0","# aggiungo i punteggi a driver stats "
"0","driver_stats = inner_join(driver_stats,points_stats,by=""driverId"")"
"0",""
"0","# elimino le statistiche dei punti, ormai aggiunge nella tabella driverstats"
"0","rm(points_stats_new)"
"0","rm(points_stats)"
