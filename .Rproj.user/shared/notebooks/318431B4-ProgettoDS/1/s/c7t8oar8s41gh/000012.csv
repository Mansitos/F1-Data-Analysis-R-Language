"0",""
"0","top_c = 50"
"0","top_d = 70"
"0",""
"0","allowed_constr = constr_stats %>% arrange(desc(performance)) %>% filter(held_races >= 50) %>% top_n(top_c,performance)"
"0","allowed_drivers = driver_stats %>% arrange(desc(performance_with_bonus)) %>% filter(races >= 20)%>% top_n(top_d,performance_with_bonus) "
"0",""
"0","constr_nodes = allowed_constr %>% select(name,performance) %>% rename(id=name) %>% mutate(group=""constructor"") %>% mutate(color=list(list(background=""gold"",border=""black""))) %>% rename(size=performance)%>% mutate(shape=""diamond"")"
"0",""
"0","drivers_nodes = allowed_drivers %>% select(full_name,performance_with_bonus) %>% rename(id=full_name) %>% mutate(group=""driver"") %>% mutate(color=list(list(background=""tomato"",border=""black"")))%>% rename(size=performance_with_bonus) %>% mutate(shape=""dot"")"
"0",""
"0",""
"0","id_name_drivers = allowed_drivers %>% select(full_name,driverId)"
"0","id_name_constr =  allowed_constr %>% select(name,constructorId)"
"0",""
"0","drivers_constr_arcs = unique(results %>% select(driverId,constructorId))"
"0",""
"0","drivers_constr_arcs = inner_join(drivers_constr_arcs,id_name_constr,by=""constructorId"")"
"0","drivers_constr_arcs = inner_join(drivers_constr_arcs,id_name_drivers,by=""driverId"")"
"0",""
"0","drivers_constr_arcs = drivers_constr_arcs %>% select(-driverId,-constructorId) %>% rename(from=full_name,to=name)"
"0",""
"0","nodes = as.data.frame(unique(rbind(constr_nodes,drivers_nodes)))"
"0","arcs = as.data.frame(unique(drivers_constr_arcs))"
"0",""
"0","# filtering nodes with 0 arcs"
"0","nodes = nodes %>% filter(id %in% append(arcs$from,arcs$to))"
"0",""
"0","vis.nodes <- nodes"
"0","vis.arcs <- arcs"
"0",""
"0","# graphics paramemeters"
"0","vis.nodes$shadow <- TRUE # Nodes will drop shadow"
"0","vis.nodes = nodes %>% mutate(label=id)"
"0","vis.nodes$label = vis.nodes$id"
"0","vis.nodes$size = (vis.nodes$size +0.325)*65"
"0","vis.nodes$borderWidth <- 2 # Node border width"
"0",""
"0","vis.arcs$color <- ""gray"""
"0","vis.arcs$width <- 1"
"0","vis.arcs$shadow <- FALSE"
"0",""
"0","net = visNetwork(vis.nodes, vis.arcs,background=""white"")"
"0","visOptions(net,highlightNearest = TRUE)"
